{"version":3,"sources":["app/redux/modules/Deck/fetchFromJson.js","app/redux/modules/Deck/index.js","features/Reset/index.js","components/Counter/index.js","features/IncidentCounter/index.js","features/EscalationCounter/index.js","components/Meeple.js","features/PlayerTurn/index.js","app/redux/modules/Player/fetchFromJson.js","app/redux/modules/Player/index.js","features/Passport/PlayerName/index.js","features/PlayerCard/EventCard/index.js","components/Faction/index.js","features/PlayerCard/CityCard/Region.js","features/PlayerCard/CityCard/Number.js","features/PlayerCard/CityCard/index.js","features/PlayerCard/CardActions/index.js","features/PlayerCard/index.js","components/CardSelector/index.js","features/Hand/PlayerDeck/index.js","features/Hand/DiscardDeck/index.js","features/Hand/DeckControls/index.js","features/Hand/index.js","features/Passport/PlayerFaction/index.js","features/Passport/AliasInfo/index.js","features/Passport/index.js","features/Passport/TurnTokenCounter/index.js","features/PlayerPanel/index.js","Root.js","reportWebVitals.js","app/gql/index.js","app/gql/modules/Cards/index.js","app/gql/modules/Deck/index.js","app/gql/modules/Hand/index.js","app/redux/index.js","app/redux/sessionStorage.js","app/index.js","index.js"],"names":["data","cards","map","card","region","regions","faction","factions","name","initialState","pending","error","fetchData","deck","discard","playerTurn","1","turnTokens","hand","2","3","4","incident","escalation","fetchCards","createAsyncThunk","a","slice","createSlice","reducers","advanceTurn","state","action","advance","value","setName","payload","id","addTurnToken","handId","removeTurnToken","dec","draw","cardId","find","item","filter","push","xfer","from","to","fromHand","toHand","newFromHand","redraw","increase","decrease","reset","extraReducers","fulfilled","rejected","message","actions","Reset","props","dispatch","useDispatch","useState","isResetting","setIsResetting","Button","variant","color","onClick","Counter","title","onDecrease","decreaseDisabled","onIncrease","increaseDisabled","Paper","className","cx","size","disabled","defaultProps","IncidentCounter","useSelector","style","toString","EscalationCounter","Meeple","SvgIcon","viewBox","d","PlayerTurn","minWidth","sorted","passports","reduce","acc","cur","key","passport","Object","entries","primary","passportId","alias","newData","secondary","k","v","includes","keys","split","prop","ent","sub","fetchPassports","playerId","changeFaction","fac","PlayerName","player","TextField","label","onChange","target","EventCard","description","condition","elevation","display","position","padding","width","height","lineHeight","background","textAlign","boxShadow","marginBottom","fontWeight","fontSize","paddingBottom","borderBottom","Faction","icons","Allied","Neutral","Communist","Event","factionId","Comp","allied","neutral","communist","event","Region","writingMode","transform","textTransform","5","6","Filter1","Filter2","Filter3","Filter4","Filter5","Filter6","7","Filter7","8","Filter8","9","Filter9","Number","CityCard","number","maxWidth","maxHeight","minHeight","Grid","container","spacing","alignItems","xs","paddingLeft","bottom","left","hands","CardActions","isXferOpen","setXferOpen","handleXfer","players","h","justify","e","currentTarget","Menu","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","Card","CardSelector","options","search","setSearch","option","filtered","Array","isArray","handleClick","onKeyUp","length","tabIndex","PlayerDeck","DiscardDeck","DeckControls","isOpen","setOpen","IconButton","Drawer","anchor","Hand","isCollapsed","i","PlayerFaction","margin","AliasInfo","isExpanded","ps","asset","assetList","liability","liabilityList","assets","values","liabilities","role","city","location","Passport","paddingTop","TurnTokenCounter","PlayerPanel","isPassportOpen","setPassportOpen","isTurn","App","useEffect","AppBar","Toolbar","Typography","marginLeft","flexGrow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","process","REACT_APP_API_ROOT","cache","InMemoryCache","typePolicies","Cards","keyFields","Deck","storeKey","preloadedState","serializedState","sessionStorage","getItem","JSON","parse","loadState","store","configureStore","reducer","DeckName","subscribe","stringify","setItem","saveState","getState","Provider","children","reduxClient","REACT_APP_GQL_FLAG","gqlClient","ReactDOM","render","StrictMode","CssBaseline","Root","document","getElementById"],"mappings":"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","file":"static/js/main.a4ce6359.chunk.js","sourcesContent":["import cards from \"./json/cards\";\nimport factions from \"./json/factions\";\nimport regions from \"./json/regions\";\n\nconst data = () => {\n  return cards.map((card) => ({\n    ...card,\n    region: regions[card.region],\n    faction: factions[card.faction],\n  }));\n};\n\nexport default data;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport fetchData from \"./fetchFromJson\";\n\nexport const name = \"deck\";\n\nexport const initialState = {\n  pending: false,\n  error: \"\",\n  cards: fetchData(),\n  deck: [],\n  discard: [],\n  playerTurn: 1,\n  1: { name: \"\", turnTokens: 0, hand: [] },\n  2: { name: \"\", turnTokens: 0, hand: [] },\n  3: { name: \"\", turnTokens: 0, hand: [] },\n  4: { name: \"\", turnTokens: 0, hand: [] },\n  incident: 0,\n  escalation: 0,\n};\n\nexport const fetchCards = createAsyncThunk(`${name}/fetchCards`, async () => {\n  const data = fetchData();\n  return data;\n});\n\nconst slice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    advanceTurn: (state, action) => {\n      const advance = state.playerTurn + 1;\n      const value = advance > 4 ? 1 : advance;\n      return { ...state, playerTurn: value };\n    },\n    setName: (state, action) => {\n      const { id, value } = action.payload;\n\n      if (id && value) {\n        return { ...state, [id]: { ...state[id], name: value } };\n      }\n\n      return state;\n    },\n    addTurnToken: (state, action) => {\n      const handId = action.payload;\n      if (handId in state) {\n        const turnTokens = state[handId].turnTokens + 1;\n        return { ...state, [handId]: { ...state[handId], turnTokens } };\n      }\n      return state;\n    },\n    removeTurnToken: (state, action) => {\n      const handId = action.payload;\n      if (handId in state) {\n        const dec = state[handId].turnTokens - 1;\n        const turnTokens = dec <= 0 ? 0 : dec;\n        return { ...state, [handId]: { ...state[handId], turnTokens } };\n      }\n      return state;\n    },\n    draw: (state, action) => {\n      const handId = action.payload.hand;\n      const cardId = action.payload.card;\n      const hand = [...state[handId].hand];\n      const card = state.cards.find((item) => item.id === cardId);\n      const deck = state.deck.filter((item) => item.id !== cardId);\n      hand.push(card);\n\n      return { ...state, deck, [handId]: { ...state[handId], hand } };\n    },\n    discard: (state, action) => {\n      const handId = action.payload.hand;\n      const cardId = action.payload.card;\n      const discard = [...state.discard];\n      const card = state.cards.find((item) => item.id === cardId);\n      discard.push(card);\n      const hand = state[handId].hand.filter((item) => item.id !== cardId);\n\n      return { ...state, discard, [handId]: { ...state[handId], hand } };\n    },\n    xfer: (state, action) => {\n      const from = action.payload.from;\n      const to = action.payload.to;\n      const cardId = action.payload.card;\n      const fromHand = [...state[from].hand];\n      const toHand = [...state[to].hand];\n      const card = state.cards.find((item) => item.id === cardId);\n      toHand.push(card);\n      const newFromHand = fromHand.filter((item) => item.id !== cardId);\n\n      return {\n        ...state,\n        [from]: { ...state[from], hand: newFromHand },\n        [to]: { ...state[to], hand: toHand },\n      };\n    },\n    redraw: (state, action) => {\n      const handId = action.payload.hand;\n      const cardId = action.payload.card;\n      const hand = [...state[handId].hand];\n      const card = state.cards.find((item) => item.id === cardId);\n      const discard = state.discard.filter((item) => item.id !== cardId);\n      hand.push(card);\n\n      return { ...state, discard, [handId]: { ...state[handId], hand } };\n    },\n    increase: (state, action) => {\n      if (action.payload in state) {\n        const value = state[action.payload] + 1;\n        return { ...state, [action.payload]: value };\n      }\n      return state;\n    },\n    decrease: (state, action) => {\n      if (action.payload in state) {\n        const dec = state[action.payload] - 1;\n        const value = dec <= 0 ? 0 : dec;\n\n        return { ...state, [action.payload]: value };\n      }\n      return state;\n    },\n    reset: (state) => ({\n      ...initialState,\n      cards: state.cards,\n      deck: state.cards,\n    }),\n  },\n  extraReducers: {\n    [fetchCards.pending]: (state, action) => {\n      return { ...state, pending: true };\n    },\n    [fetchCards.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        cards: action.payload,\n        deck: action.payload,\n        pending: false,\n      };\n    },\n    [fetchCards.rejected]: (state, action) => {\n      return { ...state, error: action.error.message, pending: false };\n    },\n  },\n});\nexport const {\n  advanceTurn,\n  addTurnToken,\n  removeTurnToken,\n  setName,\n  draw,\n  discard,\n  increase,\n  decrease,\n  xfer,\n  redraw,\n  reset,\n} = slice.actions;\nexport default slice.reducer;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { reset } from \"app/redux/modules/Deck\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Reset = (props) => {\n  const dispatch = useDispatch();\n  const [isResetting, setIsResetting] = useState(\"\");\n\n  const handleClick = () => {\n    if (!isResetting) {\n      setIsResetting(\"Really?\");\n    } else {\n      dispatch(reset());\n      setIsResetting(\"\");\n    }\n  };\n  return (\n    <Button variant=\"contained\" color=\"secondary\" onClick={handleClick}>\n      {isResetting ? isResetting : \"Reset\"}\n    </Button>\n  );\n};\n\nexport default Reset;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Increase from \"@material-ui/icons/AddCircle\";\nimport Decrease from \"@material-ui/icons/RemoveCircle\";\nimport cx from \"classnames\";\nimport \"./Counter.scss\";\n\nconst Counter = ({\n  title,\n  value,\n  variant,\n  onDecrease,\n  decreaseDisabled,\n  onIncrease,\n  increaseDisabled,\n}) => {\n  return (\n    <Paper\n      className={cx({ Counter: true, [variant]: variant })}\n      variant={variant}\n    >\n      {title && <span className=\"Counter__title\">{title}</span>}\n      <Button\n        className=\"Counter__decrease\"\n        onClick={onDecrease}\n        size=\"small\"\n        disabled={decreaseDisabled}\n      >\n        <Decrease />\n      </Button>\n      <span className=\"Counter__value\">{value}</span>\n      <Button\n        className=\"Counter__increase\"\n        onClick={onIncrease}\n        size=\"small\"\n        disabled={increaseDisabled}\n      >\n        <Increase />\n      </Button>\n    </Paper>\n  );\n};\n\nCounter.defaultProps = {\n  value: 0,\n  name: \"\",\n  onDecrease: () => null,\n  onIncrease: () => null,\n};\n\nCounter.propTypes = {\n  title: PropTypes.node,\n  value: PropTypes.string,\n  onDecrease: PropTypes.func,\n  onIncrease: PropTypes.func,\n  decreaseDisabled: PropTypes.bool,\n  increaseDisabled: PropTypes.bool,\n};\n\nexport default Counter;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Incident from \"@material-ui/icons/Error\";\nimport Counter from \"components/Counter\";\nimport { increase, decrease } from \"app/redux/modules/Deck\";\nimport \"./Incident.scss\";\n\nconst IncidentCounter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector((state) => state.deck.incident);\n\n  const handleDecrease = () => {\n    dispatch(decrease(\"incident\"));\n  };\n  const handleIncrease = () => {\n    dispatch(increase(\"incident\"));\n  };\n  return (\n    <Counter\n      title={\n        <span className=\"Incident\">\n          <Incident style={{ color: \"white\" }} />\n        </span>\n      }\n      onDecrease={handleDecrease}\n      onIncrease={handleIncrease}\n      decreaseDisabled={value <= 0}\n      value={value.toString()}\n    />\n  );\n};\n\nexport default IncidentCounter;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Escalation from \"@material-ui/icons/SignalCellularAlt\";\nimport Counter from \"components/Counter\";\nimport { increase, decrease } from \"app/redux/modules/Deck\";\n\nconst EscalationCounter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector((state) => state.deck.escalation);\n\n  const handleDecrease = () => {\n    dispatch(decrease(\"escalation\"));\n  };\n  const handleIncrease = () => {\n    dispatch(increase(\"escalation\"));\n  };\n  return (\n    <Counter\n      title={<Escalation style={{ color: \"firebrick\" }} />}\n      onDecrease={handleDecrease}\n      onIncrease={handleIncrease}\n      decreaseDisabled={value <= 0}\n      value={value.toString()}\n    />\n  );\n};\n\nexport default EscalationCounter;\n","import React from \"react\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nexport default function Meeple(props) {\n  return (\n    <SvgIcon {...props} viewBox=\"0 0 80 80\">\n      <path\n        d=\"M57.1,61.6l-10.6-33c3.6-2.9,5.9-7.3,5.9-12.3c0-8.7-7.1-15.8-15.9-15.8c-8.7,0-15.9,7.1-15.9,15.8c0,5,2.3,9.4,5.9,12.3\n\tl-10.6,33c0,0.2-0.1,0.3-0.1,0.5c0,3,2.3,5.7,6.5,7.7c3.8,1.7,8.9,2.7,14.2,2.7s10.4-1,14.2-2.7c4.2-1.9,6.5-4.7,6.5-7.7\n\tC57.1,61.9,57.1,61.7,57.1,61.6z\"\n      />\n    </SvgIcon>\n  );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Meeple from \"components/Meeple\";\nimport { advanceTurn } from \"app/redux/modules/Deck\";\n\nconst PlayerTurn = () => {\n  const dispatch = useDispatch();\n  const playerTurn = useSelector((state) => state.deck.playerTurn);\n  const handleClick = () => {\n    dispatch(advanceTurn());\n  };\n  return (\n    <Button\n      variant=\"contained\"\n      onClick={handleClick}\n      style={{ minWidth: \"unset\" }}\n    >\n      <Meeple />\n      {`${playerTurn.toString()}`}\n    </Button>\n  );\n};\n\nexport default PlayerTurn;\n","import passports from \"./json/passports\";\nimport actions from \"./json/actions\";\n\nconst data = () => {\n  // reduce data by unique passport id's into list of aliases\n  const sorted = passports.reduce((acc, cur) => {\n    const key = cur.passport;\n    return { ...acc, [key]: [...(acc[key] ? acc[key] : []), cur] };\n  }, {});\n  // for each passport alias, parse fields into sub-objects\n  // reduce the sub-objects into an array of objects\n  // for each password\n  const parsed = Object.entries(sorted).reduce(\n    (primary, [passportId, aliases]) => {\n      const data = aliases.map((alias) => {\n        const newData = Object.entries(alias).reduce((secondary, [k, v]) => {\n          if (!k.includes(\"__\")) {\n            return { ...secondary, [k]: v };\n          }\n          // find the prop, then the ent, merge in the sub and value\n          const keys = k.split(\"__\");\n          const prop = keys[0];\n          const ent = keys[1];\n          const sub = keys[2];\n          const value = v;\n\n          return {\n            ...secondary,\n            [prop]: {\n              ...(prop in secondary ? secondary[prop] : {}),\n              [ent]: {\n                ...(!secondary[prop]\n                  ? {}\n                  : ent in secondary[prop]\n                  ? secondary[prop][ent]\n                  : {}),\n                [sub]: value,\n              },\n            },\n          };\n        }, {});\n        newData.action = actions[newData.faction];\n        return newData;\n      });\n\n      // return the primary acc with the parsed passport data\n      return { ...primary, [passportId]: data };\n    },\n    {}\n  );\n  return parsed;\n};\n\nexport default data;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport fetchData from \"./fetchFromJson\";\n\nexport const name = \"player\";\n\nexport const initialState = {\n  pending: false,\n  error: \"\",\n  1: { name: \"\", faction: 1, turnTokens: 0, hand: [], passport: [] },\n  2: { name: \"\", faction: 1, turnTokens: 0, hand: [], passport: [] },\n  3: { name: \"\", faction: 1, turnTokens: 0, hand: [], passport: [] },\n  4: { name: \"\", faction: 1, turnTokens: 0, hand: [], passport: [] },\n};\n\nexport const fetchPassports = createAsyncThunk(\n  `${name}/fetchPassports`,\n  async () => {\n    const data = fetchData();\n    return data;\n  }\n);\n\nconst slice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setName: (state, action) => {\n      const { id, value } = action.payload;\n      if (id && value) {\n        return { ...state, [id]: { ...state[id], name: value } };\n      }\n      return state;\n    },\n    addTurnToken: (state, action) => {\n      const playerId = action.payload;\n      if (playerId in state) {\n        const turnTokens = state[playerId].turnTokens + 1;\n        return { ...state, [playerId]: { ...state[playerId], turnTokens } };\n      }\n      return state;\n    },\n    removeTurnToken: (state, action) => {\n      const playerId = action.payload;\n      if (playerId in state) {\n        const dec = state[playerId].turnTokens - 1;\n        const turnTokens = dec <= 0 ? 0 : dec;\n        return { ...state, [playerId]: { ...state[playerId], turnTokens } };\n      }\n      return state;\n    },\n    changeFaction: (state, action) => {\n      const playerId = action.payload;\n      if (playerId in state) {\n        const fac = state[playerId].faction + 1;\n        const faction = fac > 3 ? 1 : fac;\n        return { ...state, [playerId]: { ...state[playerId], faction } };\n      }\n      return state;\n    },\n  },\n  extraReducers: {\n    [fetchPassports.pending]: (state, action) => {\n      return { ...state, pending: true };\n    },\n    [fetchPassports.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        1: { ...state[\"1\"], passport: action.payload[\"1\"] },\n        2: { ...state[\"2\"], passport: action.payload[\"2\"] },\n        3: { ...state[\"3\"], passport: action.payload[\"3\"] },\n        4: { ...state[\"4\"], passport: action.payload[\"4\"] },\n      };\n    },\n    [fetchPassports.rejected]: (state, action) => {\n      return { ...state, error: action.error.message, pending: false };\n    },\n  },\n});\nexport const {\n  addTurnToken,\n  removeTurnToken,\n  setName,\n  changeFaction,\n} = slice.actions;\nexport default slice.reducer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { setName } from \"app/redux/modules/Player\";\n\nconst PlayerName = ({ id }) => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.player);\n  const name = state[id].name;\n\n  const handleChange = ({ target: { value = \"\" } = {} }) => {\n    dispatch(setName({ id, value }));\n  };\n  return (\n    <TextField\n      className=\"PlayerName\"\n      size=\"small\"\n      label=\"Name\"\n      value={name}\n      variant=\"outlined\"\n      onChange={handleChange}\n    />\n  );\n};\n\nPlayerName.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default PlayerName;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst EventCard = ({ name, description, condition }) => {\n  return (\n    <Paper\n      elevation={5}\n      style={{\n        display: \"inline-block\",\n        position: \"relative\",\n        padding: \"0.5rem\",\n        width: \"12rem\",\n        height: \"18rem\",\n        lineHeight: 1,\n        background: \"beige\",\n      }}\n    >\n      <div\n        style={{\n          lineHeight: 1,\n          height: \"100%\",\n          padding: \"1rem\",\n          textAlign: \"center\",\n          background: \"orangered\",\n          boxShadow: \"0px 0px 4px rgba(85,85,85, 0.25)\",\n        }}\n      >\n        <div\n          style={{\n            marginBottom: \"2rem\",\n            fontWeight: 700,\n          }}\n        >\n          {name}\n        </div>\n        <div\n          style={{\n            background: \"antiquewhite\",\n            padding: \"1rem\",\n            fontSize: \"0.75rem\",\n          }}\n        >\n          <div\n            style={{\n              marginBottom: \"0.5rem\",\n              paddingBottom: \"0.5rem\",\n              borderBottom: \"1px solid black\",\n            }}\n          >\n            {description}\n          </div>\n          <div>{condition}</div>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nEventCard.propTypes = {\n  name: PropTypes.string,\n  region: PropTypes.shape({ id: PropTypes.string, name: PropTypes.string }),\n  faction: PropTypes.shape({ id: PropTypes.string, name: PropTypes.string }),\n  number: PropTypes.string,\n};\n\nexport default EventCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Neutral from \"@material-ui/icons/Language\";\nimport Communist from \"@material-ui/icons/Star\";\nimport Allied from \"@material-ui/icons/Toys\";\nimport Event from \"@material-ui/icons/DoubleArrow\";\nimport \"./Faction.scss\";\n\nconst Faction = ({ id }) => {\n  const icons = {\n    1: Allied,\n    2: Neutral,\n    3: Communist,\n    4: Event,\n  };\n  const factionId = !(id in icons) ? \"4\" : id;\n  const Comp = factionId in icons ? icons[factionId] : icons[\"4\"];\n  return (\n    <span\n      className={cx({\n        Faction: true,\n        allied: id === \"1\",\n        neutral: id === \"2\",\n        communist: id === \"3\",\n        event: !(id in icons),\n      })}\n    >\n      {Comp && <Comp />}\n    </span>\n  );\n};\n\nFaction.propTypes = {\n  id: \"4\",\n};\n\nFaction.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default Faction;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Region = ({ id, name }) => {\n  const styles = {\n    1: { background: \"dodgerblue\" },\n    2: { background: \"deepskyblue\" },\n    3: { background: \"goldenrod\" },\n    4: { background: \"darkkhaki\" },\n    5: { background: \"peachpuff\" },\n    6: { background: \"lightsalmon\" },\n  };\n  return (\n    <div\n      style={{\n        writingMode: \"vertical-rl\",\n        transform: \"rotate(180deg)\",\n        lineHeight: 1,\n        padding: \"0.5rem\",\n        textTransform: \"uppercase\",\n        fontWeight: 700,\n        ...styles[id],\n      }}\n    >\n      {name}\n    </div>\n  );\n};\n\nRegion.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n};\n\nexport default Region;\n","import React from \"react\";\nimport {\n  Filter1,\n  Filter2,\n  Filter3,\n  Filter4,\n  Filter5,\n  Filter6,\n  Filter7,\n  Filter8,\n  Filter9,\n} from \"@material-ui/icons\";\n\nconst icons = {\n  1: Filter1,\n  2: Filter2,\n  3: Filter3,\n  4: Filter4,\n  5: Filter5,\n  6: Filter6,\n  7: Filter7,\n  8: Filter8,\n  9: Filter9,\n};\nconst Number = ({ value }) => {\n  const Comp = icons[value];\n  return <Comp style={{ lineHeight: 1, fontSize: \"1rem\" }} />;\n};\n\nNumber.propTypes = {};\n\nexport default Number;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Faction from \"components/Faction\";\nimport Region from \"./Region\";\nimport Number from \"./Number\";\n\nconst CityCard = ({ name, region, faction, number }) => {\n  return (\n    <Paper\n      elevation={5}\n      style={{\n        display: \"inline-block\",\n        position: \"relative\",\n        padding: \" 0.75rem 0.5rem 0.25rem\",\n        width: \"12rem\",\n        height: \"18rem\",\n        maxWidth: \"12rem\",\n        maxHeight: \"18rem\",\n        lineHeight: 1,\n        background: \"beige\",\n      }}\n    >\n      <div\n        style={{\n          lineHeight: 1,\n          minHeight: \"100%\",\n          background: \"antiquewhite\",\n          boxShadow: \"0px 0px 4px rgba(85,85,85, 0.25)\",\n        }}\n      >\n        <Grid container spacing={1} style={{ alignItems: \"center\" }}>\n          <Grid item xs={3}>\n            <div style={{ paddingLeft: \"0.25rem\" }}>\n              <Faction id={faction.id} />\n            </div>\n          </Grid>\n          <Grid item xs={9}>\n            <span\n              style={{\n                lineHeight: 0,\n                fontWeight: 700,\n                textTransform: \"uppercase\",\n              }}\n            >\n              {name}\n            </span>\n          </Grid>\n        </Grid>\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"3rem\",\n            left: \"0.5rem\",\n            lineHeight: 1,\n          }}\n        >\n          <Region id={region.id} name={region.name} />\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"0.75rem\",\n            left: \"1rem\",\n            lineHeight: 1,\n          }}\n        >\n          <Number value={number} />\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nCityCard.propTypes = {\n  name: PropTypes.string,\n  region: PropTypes.shape({ id: PropTypes.string, name: PropTypes.string }),\n  faction: PropTypes.shape({ id: PropTypes.string, name: PropTypes.string }),\n  number: PropTypes.string,\n};\n\nexport default CityCard;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport Button from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Xfer from \"@material-ui/icons/MobileScreenShare\";\nimport Discard from \"@material-ui/icons/Delete\";\nimport { xfer, discard } from \"app/redux/modules/Deck\";\n\nconst hands = [\"1\", \"2\", \"3\", \"4\"];\n\nconst CardActions = ({ hand, card }) => {\n  const dispatch = useDispatch();\n\n  const [isXferOpen, setXferOpen] = useState(null);\n  const handleXfer = ({ target: { value = \"\" } = {} }) => {\n    setXferOpen(null);\n    if (value) {\n      dispatch(xfer({ from: hand, to: value, card }));\n    }\n  };\n  const handleDiscard = () => {\n    dispatch(discard({ hand, card }));\n  };\n\n  const players = hands.filter((h) => h !== hand);\n  return (\n    <Grid container alignItems=\"center\" justify=\"flex-end\" spacing={1}>\n      <Grid item>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          onClick={(e) => {\n            setXferOpen(e.currentTarget);\n          }}\n        >\n          <Xfer />\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={isXferOpen}\n          keepMounted\n          open={Boolean(isXferOpen)}\n          onClose={handleXfer}\n        >\n          {players.map((player) => (\n            <MenuItem value={player} onClick={handleXfer}>\n              {player}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n      <Grid item>\n        <Button size=\"small\" color=\"secondary\" onClick={handleDiscard}>\n          <Discard />\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nCardActions.propTypes = {\n  hand: PropTypes.string,\n  card: PropTypes.string,\n};\n\nexport default CardActions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport EventCard from \"./EventCard\";\nimport CityCard from \"./CityCard\";\nimport CardActions from \"./CardActions\";\nimport \"./PlayerCard.scss\";\n\nconst Card = ({ hand, data }) => {\n  return (\n    <div className=\"PlayerCard\">\n      {!data.number ? <EventCard {...data} /> : <CityCard {...data} />}\n\n      <div className=\"PlayerCard__actions\">\n        <CardActions hand={hand} card={data.id} />\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  hand: PropTypes.string,\n  data: PropTypes.object,\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Faction from \"components/Faction\";\nimport \"./CardSelector.scss\";\n\nconst CardSelector = ({ id, options, label, onChange }) => {\n  const [search, setSearch] = useState(\"\");\n  const data = options.filter((option) => option.name.includes(search));\n  const filtered = Array.isArray(data) ? data : [];\n\n  const handleChange = ({ target: { value = \"\" } = {} }) => {\n    setSearch(value);\n  };\n\n  const handleClick = (value) => {\n    onChange(value);\n  };\n\n  const handleKeyUp = ({ key }) => {\n    if (key !== \"Enter\") {\n      return;\n    }\n    const data = filtered[0];\n    if (data) {\n      onChange(data.id);\n      setSearch(\"\");\n    }\n  };\n\n  return (\n    <div className=\"CardSelector\">\n      <TextField\n        label={label}\n        value={search}\n        variant=\"outlined\"\n        size=\"small\"\n        className=\"CardSelector__input\"\n        onChange={handleChange}\n        onKeyUp={handleKeyUp}\n      />\n      <div className=\"CardSelector__list\">\n        {filtered.length ? (\n          filtered.map((option) => {\n            const factionId = option.faction\n              ? option.faction.id.toString()\n              : null;\n            return (\n              <div\n                tabIndex=\"0\"\n                className=\"CardSelector__item\"\n                onClick={() => handleClick(option.id)}\n                onKeyUp={({ key }) => {\n                  if (key !== \"Enter\") {\n                    return;\n                  }\n                  handleClick(option.id);\n                }}\n              >\n                <div>\n                  <Faction id={factionId} />\n                </div>\n                <div>{option.name}</div>\n              </div>\n            );\n          })\n        ) : (\n          <div style={{ fontSize: \"1rem\", color: \"#c1c1c1\" }}>\n            No cards available\n          </div>\n        )}\n      </div>\n    </div>\n  );\n  /*\n  return (\n    <Autocomplete\n      id={id}\n      clearOnBlur={true}\n      size=\"small\"\n      style={{ width: \"10rem\" }}\n      onChange={handleChange}\n      options={options}\n      autoHighlight\n      getOptionLabel={(option) => option.name}\n      value={null}\n      renderOption={(option) => {\n        const factionId = option.faction ? option.faction.id.toString() : null;\n        return (\n          <>\n            <input type=\"hidden\" name={option.id} value={option.id} />\n            <Faction id={factionId} />\n            <span style={{ display: \"inline-block\", marginLeft: \"0.5rem\" }}>\n              {option.name}\n            </span>\n          </>\n        );\n      }}\n      renderInput={(params) => {\n        return <TextField {...params} label={label} variant=\"outlined\" />;\n      }}\n    />\n  );*/\n};\n\nCardSelector.propTypes = {\n  id: PropTypes.string.isRequired,\n  options: PropTypes.array,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nCardSelector.defaultProps = {\n  label: \"Card Selector\",\n  options: [],\n  onChange: () => null,\n};\nexport default CardSelector;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { draw } from \"app/redux/modules/Deck\";\nimport CardSelector from \"components/CardSelector\";\n\nconst PlayerDeck = ({ id }) => {\n  const dispatch = useDispatch();\n  const options = useSelector((state) => state.deck.deck);\n\n  const handleChange = (value = \"\") => {\n    if (value) {\n      dispatch(draw({ hand: id, card: value.toString() }));\n    }\n  };\n  return (\n    <CardSelector\n      id={`PlayerDeck-${id}`}\n      options={options ? options : []}\n      label={\"Player Deck\"}\n      onChange={handleChange}\n    />\n  );\n};\n\nPlayerDeck.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default PlayerDeck;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { redraw } from \"app/redux/modules/Deck\";\nimport CardSelector from \"components/CardSelector\";\n\nconst DiscardDeck = ({ id }) => {\n  const dispatch = useDispatch();\n  const options = useSelector((state) => state.deck.discard);\n\n  const handleChange = (value = \"\") => {\n    if (value) {\n      dispatch(redraw({ hand: id, card: value.toString() }));\n    }\n  };\n  return (\n    <CardSelector\n      id={`DiscardDeck-${id}`}\n      options={options ? options : []}\n      label={\"Discard Deck\"}\n      onChange={handleChange}\n    />\n  );\n};\n\nDiscardDeck.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default DiscardDeck;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PlayerDeck from \"../PlayerDeck\";\nimport DiscardDeck from \"../DiscardDeck\";\nimport \"./DeckControls.scss\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Add from \"@material-ui/icons/Add\";\nimport { Drawer, Grid } from \"@material-ui/core\";\n\nconst DeckControls = ({ id }) => {\n  const [isOpen, setOpen] = useState(false);\n  return (\n    <div className=\"DeckControls\">\n      <Grid\n        container\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{\n          height: \"100%\",\n        }}\n      >\n        <IconButton size=\"medium\" onClick={() => setOpen(() => true)}>\n          <Add fontSize=\"large\" />\n        </IconButton>\n      </Grid>\n      <Drawer anchor=\"right\" open={isOpen} onClose={() => setOpen(() => false)}>\n        <div style={{ marginBottom: \"1rem\" }}>\n          <PlayerDeck id={id} />\n        </div>\n        <div>\n          <DiscardDeck id={id} />\n        </div>\n      </Drawer>\n    </div>\n  );\n};\n\nDeckControls.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default DeckControls;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport cx from \"classnames\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PlayerCard from \"features/PlayerCard\";\nimport DeckControls from \"./DeckControls\";\nimport { name } from \"app/redux/modules/Deck\";\nimport \"./Hand.scss\";\n\nconst Hand = ({ id, isCollapsed }) => {\n  const data = useSelector((state) => state[name][id]);\n  const { hand = [] } = data;\n  return (\n    <Grid\n      container\n      className={cx({ Hand: true, isCollapsed: isCollapsed })}\n      spacing={2}\n    >\n      {hand.map((card, i) => (\n        <Grid item key={`Hand-${id}-card-${i}`} className=\"Hand__card\">\n          <PlayerCard key={card.id} hand={id} data={card} />\n        </Grid>\n      ))}\n      <Grid\n        item\n        key={`Hand-${id}-card-control`}\n        className=\"Hand__card--controls\"\n      >\n        <DeckControls id={id} />\n      </Grid>\n    </Grid>\n  );\n};\n\nHand.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default Hand;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/IconButton\";\nimport Faction from \"components/Faction\";\nimport { changeFaction } from \"app/redux/modules/Player\";\n\nconst PlayerFaction = ({ id }) => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.player[id]);\n\n  const { faction } = data;\n  const handleClick = () => {\n    dispatch(changeFaction(id));\n  };\n\n  return (\n    <Button\n      style={{ padding: 0, margin: 0 }}\n      size=\"small\"\n      onClick={handleClick}\n    >\n      <Faction id={faction.toString()} />\n    </Button>\n  );\n};\n\nPlayerFaction.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default PlayerFaction;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport cx from \"classnames\";\nimport Paper from \"@material-ui/core/Paper\";\nimport \"./AliasInfo.scss\";\n\nconst AliasInfo = ({ id, isExpanded }) => {\n  const data = useSelector((state) => state.player[id]);\n\n  const { passport, faction } = data;\n  const alias = passport.find((ps) => ps.faction === faction.toString()) || {};\n  const {\n    action = {},\n    asset: assetList = {},\n    liability: liabilityList = {},\n  } = alias;\n  const assets = Object.values(assetList).filter((item) => item.title);\n  const liabilities = Object.values(liabilityList).filter((item) => item.title);\n\n  return (\n    <div className={cx({ AliasInfo: true, isExpanded: isExpanded })}>\n      <div className=\"AliasInfo__primary\">\n        <Paper className=\"AliasInfo__tag\">\n          <strong>{alias.role}</strong>\n          {alias.description}\n        </Paper>\n        <Paper className=\"AliasInfo__tag\">\n          <div>\n            <strong>{action.title}</strong>\n          </div>\n          <div>{action.description}</div>\n        </Paper>\n      </div>\n      <div className=\"AliasInfo__secondary\">\n        {Boolean(assets.length) &&\n          assets.map((asset) => {\n            return (\n              <Paper className=\"AliasInfo__tag\">\n                <div>\n                  <strong>{asset.title}</strong>\n                </div>\n                <div>{asset.description}</div>\n                {asset.city && <div>{asset.city}</div>}\n              </Paper>\n            );\n          })}\n        {Boolean(liabilities.length) &&\n          liabilities.map((liability) => {\n            return (\n              <Paper className=\"AliasInfo__tag liability\">\n                <div>\n                  <strong>{liability.title}</strong>\n                </div>\n                {`${liability.description} ${\n                  liability.location ? liability.location : \"\"\n                }`}\n              </Paper>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nAliasInfo.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default AliasInfo;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport PlayerFaction from \"./PlayerFaction\";\nimport AliasInfo from \"./AliasInfo\";\nimport \"./Passport.scss\";\n\nconst Passport = ({ id, isExpanded }) => {\n  const { faction, passport = [] } = useSelector((state) => state.player[id]);\n  const alias =\n    passport.find((item) => {\n      return item.faction === faction.toString();\n    }) || {};\n  return (\n    <div className=\"Passport\">\n      <Grid container spacing={1} alignItems=\"center\">\n        <Grid item>\n          <PlayerFaction id={id} />\n        </Grid>\n        <Grid item>{alias.name}</Grid>\n      </Grid>\n      <div style={{ paddingTop: \"0.5rem\" }}>\n        <AliasInfo id={id} isExpanded={isExpanded} />\n      </div>\n    </div>\n  );\n};\n\nPassport.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default Passport;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Icon from \"@material-ui/core/SvgIcon\";\nimport Clock from \"@material-ui/icons/AccessTime\";\nimport Counter from \"components/Counter\";\nimport { addTurnToken, removeTurnToken } from \"app/redux/modules/Deck\";\nimport \"./TurnTokenCounter.scss\";\n\nconst TurnTokenCounter = ({ id }) => {\n  const dispatch = useDispatch();\n  const value = useSelector((state) => state.deck[id].turnTokens);\n\n  const handleDecrease = () => {\n    dispatch(removeTurnToken(id));\n  };\n  const handleIncrease = () => {\n    dispatch(addTurnToken(id));\n  };\n  return (\n    <Counter\n      variant=\"flat\"\n      title={\n        <span className=\"TurnToken\">\n          <Icon>\n            <Clock />\n          </Icon>\n        </span>\n      }\n      onDecrease={handleDecrease}\n      onIncrease={handleIncrease}\n      decreaseDisabled={value <= 0}\n      value={value ? value.toString() : \"0\"}\n    />\n  );\n};\n\nTurnTokenCounter.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default TurnTokenCounter;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport cx from \"classnames\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport PlayerName from \"features/Passport/PlayerName\";\nimport Hand from \"features/Hand\";\nimport Passport from \"features/Passport\";\nimport TurnTokenCounter from \"features/Passport/TurnTokenCounter\";\nimport { name as deckName } from \"app/redux/modules/Deck\";\nimport \"./PlayerPanel.scss\";\n\nconst PlayerPanel = ({ id }) => {\n  const [isPassportOpen, setPassportOpen] = useState(false);\n  const state = useSelector((state) => state[deckName]);\n  const playerTurn = state.playerTurn.toString();\n  return (\n    <Paper\n      className={cx({\n        PlayerPanel: true,\n        isTurn: playerTurn === id,\n        isExpanded: isPassportOpen,\n      })}\n      elevation={playerTurn === id ? 4 : 2}\n    >\n      <div className=\"PlayerPanel__header\">\n        <Grid container spacing={1}>\n          <Grid item>\n            <PlayerName id={id} />\n          </Grid>\n          <Grid item>\n            <TurnTokenCounter id={id} />\n          </Grid>\n        </Grid>\n      </div>\n      <div className=\"PlayerPanel__content\">\n        <div>\n          <Passport id={id} isExpanded={isPassportOpen} />\n        </div>\n        <div>\n          <IconButton\n            className=\"PlayerPanel__expand\"\n            size=\"small\"\n            onClick={() => setPassportOpen((state) => !state)}\n          >\n            <ChevronRight fontSize=\"small\" />\n          </IconButton>\n        </div>\n        <div>\n          <div container className=\"PlayerPanel__hand\">\n            <Hand id={id} />\n          </div>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nPlayerPanel.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default PlayerPanel;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { fetchCards } from \"./app/redux/modules/Deck\";\nimport Reset from \"./features/Reset\";\nimport IncidentCounter from \"./features/IncidentCounter\";\nimport EscalationCounter from \"./features/EscalationCounter\";\nimport PlayerTurn from \"./features/PlayerTurn\";\nimport { fetchPassports } from \"./app/redux/modules/Player\";\nimport PlayerPanel from \"features/PlayerPanel\";\n\nconst App = ({ hands }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCards());\n    dispatch(fetchPassports());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\" style={{ marginBottom: \"1rem\" }}>\n        <Toolbar>\n          <Typography variant=\"h6\">Pandemic Player Cards</Typography>\n          <div style={{ marginLeft: \"2rem\" }}>\n            <PlayerTurn />\n          </div>\n          <div style={{ marginLeft: \"2rem\" }}>\n            <EscalationCounter />\n          </div>\n          <div style={{ marginLeft: \"2rem\" }}>\n            <IncidentCounter />\n          </div>\n          <div style={{ flexGrow: 1, textAlign: \"right\" }}>\n            <Reset />\n          </div>\n        </Toolbar>\n      </AppBar>\n      {hands.map((hand, i) => (\n        <PlayerPanel key={`hand-${i}`} id={hand} />\n      ))}\n    </div>\n  );\n};\n\nApp.defaultProps = {\n  hands: [\"1\", \"2\", \"3\", \"4\"],\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { Cards } from \"./modules/Cards\";\nimport { Deck } from \"./modules/Deck\";\nimport { Hand } from \"./modules/Hand\";\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_API_ROOT,\n  cache: new InMemoryCache({\n    typePolicies: {\n      Cards,\n      Deck,\n      Hand,\n    },\n  }),\n});\n\nexport default client;\n","export const Cards = {\n  keyFields: [\"id\"],\n};\n","export const Deck = {\n  keyFields: [\"id\"],\n};\n","export const Hand = {\n  keyFields: [\"id\"],\n};\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { loadState, saveState } from \"./sessionStorage\";\nimport deck, { name as DeckName } from \"./modules/Deck\";\nimport player, { name as PlayerName } from \"./modules/Player\";\n\nconst storeKey = \"PANDEMIC_ZERO_STORE\";\n\nconst preloadedState = loadState(storeKey);\n\nconst store = configureStore({\n  preloadedState,\n  reducer: {\n    [DeckName]: deck,\n    [PlayerName]: player,\n  },\n});\n\nstore.subscribe(() => {\n  saveState(storeKey, store.getState());\n});\n\nexport default store;\n","/* istanbul ignore file */\n\nexport const loadState = (key) => {\n  try {\n    const serializedState = sessionStorage.getItem(key);\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (error) {\n    return undefined;\n  }\n};\n\nexport const saveState = (key, state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    sessionStorage.setItem(key, serializedState);\n  } catch (error) {\n    // Ignore write errors.\n  }\n};\n","import { Provider as Redux } from \"react-redux\";\nimport { ApolloProvider as Apollo } from \"@apollo/client\";\n\nimport gqlClient from \"app/gql\";\nimport reduxClient from \"app/redux\";\n\nconst ReduxProvider = ({ children }) => (\n  <Redux store={reduxClient}>{children}</Redux>\n);\nconst ApolloProvider = ({ children }) => (\n  <Apollo client={gqlClient}>{children}</Apollo>\n);\n\nconst GQL_FLAG = process.env.REACT_APP_GQL_FLAG;\nlet Provider = ReduxProvider;\nif (GQL_FLAG) {\n  Provider = ApolloProvider;\n}\n\nexport default Provider;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./Root\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport AppProvider from \"./app\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <AppProvider>\n      <Root />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}