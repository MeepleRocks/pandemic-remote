{"version":3,"sources":["app/redux/modules/Deck/fetchFromJson.js","app/redux/modules/Deck/index.js","features/Reset/index.js","components/Counter/index.js","features/IncidentCounter/index.js","features/EscalationCounter/index.js","components/Meeple.js","app/redux/modules/Player/fetchFromJson.js","app/redux/modules/Player/index.js","features/PlayerTurn/index.js","app/redux/modules/Board/fetchFromJson.js","app/redux/modules/Board/index.js","features/Passport/PlayerName/index.js","features/PlayerCard/EventCard/index.js","components/Faction/index.js","features/PlayerCard/CityCard/Region.js","features/PlayerCard/CityCard/Number.js","features/PlayerCard/CityCard/index.js","features/PlayerCard/CardActions/index.js","features/PlayerCard/index.js","components/CardSelector/index.js","features/Hand/PlayerDeck/index.js","features/Hand/DiscardDeck/index.js","features/Hand/DeckControls/index.js","features/Hand/index.js","features/Passport/PlayerFaction/index.js","features/Passport/AliasInfo/index.js","features/Passport/index.js","features/Passport/TurnTokenCounter/index.js","features/PlayerPanel/index.js","components/agent.svg","features/Board/Map/Marker.js","features/Board/Map/index.js","features/Board/BoardControls.js","features/Board/index.js","Root.js","reportWebVitals.js","app/gql/index.js","app/gql/modules/Cards/index.js","app/gql/modules/Deck/index.js","app/gql/modules/Hand/index.js","app/redux/index.js","app/redux/sessionStorage.js","app/index.js","index.js"],"names":["data","cards","map","card","region","regions","faction","factions","name","initialState","pending","error","fetchData","deck","discard","playerTurn","1","turnTokens","hand","2","3","4","incident","escalation","fetchCards","createAsyncThunk","a","slice","createSlice","reducers","advanceTurn","state","action","advance","value","setName","payload","id","addTurnToken","handId","removeTurnToken","dec","draw","cardId","find","item","filter","push","xfer","from","to","fromHand","toHand","newFromHand","redraw","increase","decrease","reset","extraReducers","fulfilled","rejected","message","actions","Reset","props","dispatch","useDispatch","useState","isResetting","setIsResetting","Button","variant","color","onClick","Counter","title","varProp","onDecrease","decreaseDisabled","onIncrease","increaseDisabled","includes","Paper","className","cx","size","disabled","defaultProps","IncidentCounter","useSelector","style","toString","EscalationCounter","Meeple","SvgIcon","viewBox","d","sorted","passports","reduce","acc","cur","i","key","passport","Object","entries","primary","passportId","alias","newData","secondary","k","v","keys","split","prop","ent","sub","turnId","fart","fetchPassports","playerId","changeFaction","fac","PlayerTurn","players","minWidth","display","marginLeft","board","city","connections","con","latitude","parseFloat","longitude","infection","agents","incidents","fetchCities","cities","activeCity","setActiveCity","playload","cityIndex","findIndex","c","inc","PlayerName","TextField","label","onChange","target","EventCard","description","condition","elevation","position","padding","width","height","lineHeight","background","textAlign","boxShadow","marginBottom","fontWeight","fontSize","paddingBottom","borderBottom","Faction","icons","Allied","Neutral","Communist","Event","factionId","Comp","allied","neutral","communist","event","Region","writingMode","transform","textTransform","5","6","Filter1","Filter2","Filter3","Filter4","Filter5","Filter6","7","Filter7","8","Filter8","9","Filter9","Number","CityCard","number","maxWidth","maxHeight","minHeight","Grid","container","spacing","alignItems","xs","paddingLeft","bottom","left","hands","CardActions","isXferOpen","setXferOpen","handleXfer","playerList","h","justify","e","currentTarget","Menu","anchorEl","keepMounted","open","Boolean","onClose","player","MenuItem","Card","CardSelector","options","search","setSearch","option","filtered","Array","isArray","handleClick","onKeyUp","length","tabIndex","PlayerDeck","DiscardDeck","DeckControls","isOpen","setOpen","IconButton","Drawer","anchor","Hand","isCollapsed","PlayerFaction","margin","AliasInfo","isExpanded","ps","asset","assetList","liability","liabilityList","assets","values","liabilities","role","location","Passport","paddingTop","TurnTokenCounter","PlayerPanel","isPassportOpen","setPassportOpen","isTurn","Marker","this","surveilance","_context","viewport","project","markerStyle","top","cityStyle","borderRadius","cursor","borderLeft","ref","_containerRef","agent","alt","src","Agent","BaseControl","Map","mapStyle","zoom","setViewport","onViewportChange","nextViewport","type","properties","geometry","coordinates","paint","draggable","offsetLeft","offsetTop","console","log","BoardControls","handleIncrease","handleDecrease","Board","isNaN","App","showBoard","setShowBoard","handleBoard","useEffect","AppBar","Toolbar","Typography","flexGrow","right","zIndex","Close","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","process","REACT_APP_API_ROOT","cache","InMemoryCache","typePolicies","Cards","keyFields","Deck","storeKey","preloadedState","serializedState","sessionStorage","getItem","JSON","parse","loadState","store","configureStore","reducer","BoardName","DeckName","subscribe","stringify","setItem","saveState","getState","Provider","children","reduxClient","REACT_APP_GQL_FLAG","gqlClient","ReactDOM","render","StrictMode","CssBaseline","Root","document","getElementById"],"mappings":"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","file":"static/js/main.20823e64.chunk.js","sourcesContent":["import cards from \"./json/cards\";\nimport factions from \"./json/factions\";\nimport regions from \"./json/regions\";\n\nconst data = () => {\n  return cards.map((card) => ({\n    ...card,\n    region: regions[card.region],\n    faction: factions[card.faction],\n  }));\n};\n\nexport default data;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport fetchData from \"./fetchFromJson\";\n\nexport const name = \"deck\";\n\nexport const initialState = {\n  pending: false,\n  error: \"\",\n  cards: fetchData(),\n  deck: [],\n  discard: [],\n  playerTurn: 1,\n  1: { name: \"\", turnTokens: 0, hand: [] },\n  2: { name: \"\", turnTokens: 0, hand: [] },\n  3: { name: \"\", turnTokens: 0, hand: [] },\n  4: { name: \"\", turnTokens: 0, hand: [] },\n  incident: 0,\n  escalation: 0,\n};\n\nexport const fetchCards = createAsyncThunk(`${name}/fetchCards`, async () => {\n  const data = fetchData();\n  return data;\n});\n\nconst slice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    advanceTurn: (state, action) => {\n      const advance = state.playerTurn + 1;\n      const value = advance > 4 ? 1 : advance;\n      return { ...state, playerTurn: value };\n    },\n    setName: (state, action) => {\n      const { id, value } = action.payload;\n\n      if (id && value) {\n        return { ...state, [id]: { ...state[id], name: value } };\n      }\n\n      return state;\n    },\n    addTurnToken: (state, action) => {\n      const handId = action.payload;\n      if (handId in state) {\n        const turnTokens = state[handId].turnTokens + 1;\n        return { ...state, [handId]: { ...state[handId], turnTokens } };\n      }\n      return state;\n    },\n    removeTurnToken: (state, action) => {\n      const handId = action.payload;\n      if (handId in state) {\n        const dec = state[handId].turnTokens - 1;\n        const turnTokens = dec <= 0 ? 0 : dec;\n        return { ...state, [handId]: { ...state[handId], turnTokens } };\n      }\n      return state;\n    },\n    draw: (state, action) => {\n      const handId = action.payload.hand;\n      const cardId = action.payload.card;\n      const hand = [...state[handId].hand];\n      const card = state.cards.find((item) => item.id === cardId);\n      const deck = state.deck.filter((item) => item.id !== cardId);\n      hand.push(card);\n\n      return { ...state, deck, [handId]: { ...state[handId], hand } };\n    },\n    discard: (state, action) => {\n      const handId = action.payload.hand;\n      const cardId = action.payload.card;\n      const discard = [...state.discard];\n      const card = state.cards.find((item) => item.id === cardId);\n      discard.push(card);\n      const hand = state[handId].hand.filter((item) => item.id !== cardId);\n\n      return { ...state, discard, [handId]: { ...state[handId], hand } };\n    },\n    xfer: (state, action) => {\n      const from = action.payload.from;\n      const to = action.payload.to;\n      const cardId = action.payload.card;\n      const fromHand = [...state[from].hand];\n      const toHand = [...state[to].hand];\n      const card = state.cards.find((item) => item.id === cardId);\n      toHand.push(card);\n      const newFromHand = fromHand.filter((item) => item.id !== cardId);\n\n      return {\n        ...state,\n        [from]: { ...state[from], hand: newFromHand },\n        [to]: { ...state[to], hand: toHand },\n      };\n    },\n    redraw: (state, action) => {\n      const handId = action.payload.hand;\n      const cardId = action.payload.card;\n      const hand = [...state[handId].hand];\n      const card = state.cards.find((item) => item.id === cardId);\n      const discard = state.discard.filter((item) => item.id !== cardId);\n      hand.push(card);\n\n      return { ...state, discard, [handId]: { ...state[handId], hand } };\n    },\n    increase: (state, action) => {\n      if (action.payload in state) {\n        const value = state[action.payload] + 1;\n        return { ...state, [action.payload]: value };\n      }\n      return state;\n    },\n    decrease: (state, action) => {\n      if (action.payload in state) {\n        const dec = state[action.payload] - 1;\n        const value = dec <= 0 ? 0 : dec;\n\n        return { ...state, [action.payload]: value };\n      }\n      return state;\n    },\n    reset: (state) => ({\n      ...initialState,\n      cards: state.cards,\n      deck: state.cards,\n    }),\n  },\n  extraReducers: {\n    [fetchCards.pending]: (state, action) => {\n      return { ...state, pending: true };\n    },\n    [fetchCards.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        cards: action.payload,\n        deck: action.payload,\n        pending: false,\n      };\n    },\n    [fetchCards.rejected]: (state, action) => {\n      return { ...state, error: action.error.message, pending: false };\n    },\n  },\n});\nexport const {\n  advanceTurn,\n  addTurnToken,\n  removeTurnToken,\n  setName,\n  draw,\n  discard,\n  increase,\n  decrease,\n  xfer,\n  redraw,\n  reset,\n} = slice.actions;\nexport default slice.reducer;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { reset } from \"app/redux/modules/Deck\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Reset = (props) => {\n  const dispatch = useDispatch();\n  const [isResetting, setIsResetting] = useState(\"\");\n\n  const handleClick = () => {\n    if (!isResetting) {\n      setIsResetting(\"Really?\");\n    } else {\n      dispatch(reset());\n      setIsResetting(\"\");\n    }\n  };\n  return (\n    <Button variant=\"contained\" color=\"secondary\" onClick={handleClick}>\n      {isResetting ? isResetting : \"Reset\"}\n    </Button>\n  );\n};\n\nexport default Reset;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Increase from \"@material-ui/icons/AddCircle\";\nimport Decrease from \"@material-ui/icons/RemoveCircle\";\nimport cx from \"classnames\";\nimport \"./Counter.scss\";\n\nconst Counter = ({\n  title,\n  value,\n  variant: varProp,\n  onDecrease,\n  decreaseDisabled,\n  onIncrease,\n  increaseDisabled,\n}) => {\n  const variants = [\"elevation\", \"outlined\"];\n  const variant = variants.includes(varProp) ? varProp : null;\n  return (\n    <Paper\n      className={cx({ Counter: true, [varProp]: varProp })}\n      variant={variant}\n    >\n      {title && <span className=\"Counter__title\">{title}</span>}\n      <Button\n        className=\"Counter__decrease\"\n        onClick={onDecrease}\n        size=\"small\"\n        disabled={decreaseDisabled}\n      >\n        <Decrease />\n      </Button>\n      <span className=\"Counter__value\">{value}</span>\n      <Button\n        className=\"Counter__increase\"\n        onClick={onIncrease}\n        size=\"small\"\n        disabled={increaseDisabled}\n      >\n        <Increase />\n      </Button>\n    </Paper>\n  );\n};\n\nCounter.defaultProps = {\n  value: 0,\n  name: \"\",\n  onDecrease: () => null,\n  onIncrease: () => null,\n};\n\nCounter.propTypes = {\n  title: PropTypes.node,\n  value: PropTypes.string,\n  onDecrease: PropTypes.func,\n  onIncrease: PropTypes.func,\n  decreaseDisabled: PropTypes.bool,\n  increaseDisabled: PropTypes.bool,\n};\n\nexport default Counter;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Incident from \"@material-ui/icons/Error\";\nimport Counter from \"components/Counter\";\nimport { name as deckKey, increase, decrease } from \"app/redux/modules/Deck\";\nimport \"./Incident.scss\";\n\nconst IncidentCounter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector((state) => state[deckKey].incident);\n\n  const handleDecrease = () => {\n    dispatch(decrease(\"incident\"));\n  };\n  const handleIncrease = () => {\n    dispatch(increase(\"incident\"));\n  };\n  return (\n    <Counter\n      title={\n        <span className=\"Incident\">\n          <Incident style={{ color: \"white\" }} />\n        </span>\n      }\n      onDecrease={handleDecrease}\n      onIncrease={handleIncrease}\n      decreaseDisabled={value <= 0}\n      value={value.toString()}\n    />\n  );\n};\n\nexport default IncidentCounter;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Escalation from \"@material-ui/icons/SignalCellularAlt\";\nimport Counter from \"components/Counter\";\nimport { name as deckKey, increase, decrease } from \"app/redux/modules/Deck\";\n\nconst EscalationCounter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector((state) => state[deckKey].escalation);\n\n  const handleDecrease = () => {\n    dispatch(decrease(\"escalation\"));\n  };\n  const handleIncrease = () => {\n    dispatch(increase(\"escalation\"));\n  };\n  return (\n    <Counter\n      title={<Escalation style={{ color: \"firebrick\" }} />}\n      onDecrease={handleDecrease}\n      onIncrease={handleIncrease}\n      decreaseDisabled={value <= 0}\n      value={value.toString()}\n    />\n  );\n};\n\nexport default EscalationCounter;\n","import React from \"react\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nexport default function Meeple(props) {\n  return (\n    <SvgIcon {...props} viewBox=\"0 0 80 80\">\n      <path\n        d=\"M57.1,61.6l-10.6-33c3.6-2.9,5.9-7.3,5.9-12.3c0-8.7-7.1-15.8-15.9-15.8c-8.7,0-15.9,7.1-15.9,15.8c0,5,2.3,9.4,5.9,12.3\n\tl-10.6,33c0,0.2-0.1,0.3-0.1,0.5c0,3,2.3,5.7,6.5,7.7c3.8,1.7,8.9,2.7,14.2,2.7s10.4-1,14.2-2.7c4.2-1.9,6.5-4.7,6.5-7.7\n\tC57.1,61.9,57.1,61.7,57.1,61.6z\"\n      />\n    </SvgIcon>\n  );\n}\n","import passports from \"./json/passports\";\nimport actions from \"./json/actions\";\n\nconst data = () => {\n  // reduce data by unique passport id's into list of aliases\n  const sorted = passports.reduce((acc, cur, i) => {\n    const key = cur.passport;\n    return { ...acc, [key]: [...(acc[key] ? acc[key] : []), cur] };\n  }, {});\n  // for each passport alias, parse fields into sub-objects\n  // reduce the sub-objects into an array of objects\n  // for each password\n  const parsed = Object.entries(sorted).reduce(\n    (primary, [passportId, aliases], i) => {\n      const data = aliases.map((alias) => {\n        const newData = Object.entries(alias).reduce((secondary, [k, v]) => {\n          if (!k.includes(\"__\")) {\n            return { ...secondary, [k]: v };\n          }\n          // find the prop, then the ent, merge in the sub and value\n          const keys = k.split(\"__\");\n          const prop = keys[0];\n          const ent = keys[1];\n          const sub = keys[2];\n          const value = v;\n\n          return {\n            ...secondary,\n            [prop]: {\n              ...(prop in secondary ? secondary[prop] : {}),\n              [ent]: {\n                ...(!secondary[prop]\n                  ? {}\n                  : ent in secondary[prop]\n                  ? secondary[prop][ent]\n                  : {}),\n                [sub]: value,\n              },\n            },\n          };\n        }, {});\n        newData.action = actions[newData.faction];\n        return newData;\n      });\n\n      // return the primary acc with the parsed passport data\n      return { ...primary, turnId: i + 1, fart: \"poop\", [passportId]: data };\n    },\n    {}\n  );\n  return parsed;\n};\n\nexport default data;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport fetchData from \"./fetchFromJson\";\n\nexport const name = \"player\";\n\nexport const initialState = {\n  pending: false,\n  error: \"\",\n  1: { name: \"\", faction: 1, turnTokens: 0, hand: [], passport: [] },\n  2: { name: \"\", faction: 1, turnTokens: 0, hand: [], passport: [] },\n  3: { name: \"\", faction: 1, turnTokens: 0, hand: [], passport: [] },\n  4: { name: \"\", faction: 1, turnTokens: 0, hand: [], passport: [] },\n};\n\nexport const fetchPassports = createAsyncThunk(\n  `${name}/fetchPassports`,\n  async () => {\n    const data = fetchData();\n    return data;\n  }\n);\n\nconst slice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setName: (state, action) => {\n      const { id, value } = action.payload;\n      if (id && value) {\n        return { ...state, [id]: { ...state[id], name: value } };\n      }\n      return state;\n    },\n    addTurnToken: (state, action) => {\n      const playerId = action.payload;\n      if (playerId in state) {\n        const turnTokens = state[playerId].turnTokens + 1;\n        return { ...state, [playerId]: { ...state[playerId], turnTokens } };\n      }\n      return state;\n    },\n    removeTurnToken: (state, action) => {\n      const playerId = action.payload;\n      if (playerId in state) {\n        const dec = state[playerId].turnTokens - 1;\n        const turnTokens = dec <= 0 ? 0 : dec;\n        return { ...state, [playerId]: { ...state[playerId], turnTokens } };\n      }\n      return state;\n    },\n    changeFaction: (state, action) => {\n      const playerId = action.payload;\n      if (playerId in state) {\n        const fac = state[playerId].faction + 1;\n        const faction = fac > 3 ? 1 : fac;\n        return { ...state, [playerId]: { ...state[playerId], faction } };\n      }\n      return state;\n    },\n  },\n  extraReducers: {\n    [fetchPassports.pending]: (state, action) => {\n      return { ...state, pending: true };\n    },\n    [fetchPassports.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        1: { ...state[\"1\"], passport: action.payload[\"1\"] },\n        2: { ...state[\"2\"], passport: action.payload[\"2\"] },\n        3: { ...state[\"3\"], passport: action.payload[\"3\"] },\n        4: { ...state[\"4\"], passport: action.payload[\"4\"] },\n      };\n    },\n    [fetchPassports.rejected]: (state, action) => {\n      return { ...state, error: action.error.message, pending: false };\n    },\n  },\n});\nexport const {\n  addTurnToken,\n  removeTurnToken,\n  setName,\n  changeFaction,\n} = slice.actions;\nexport default slice.reducer;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Meeple from \"components/Meeple\";\nimport { name as deckKey, advanceTurn } from \"app/redux/modules/Deck\";\n\nimport { name as playerKey } from \"app/redux/modules/Player\";\n\nimport {} from \"app/redux/modules/Player\";\n\nconst PlayerTurn = () => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n  const playerTurn = state[deckKey].playerTurn;\n  const players = state[playerKey];\n  const handleClick = () => {\n    dispatch(advanceTurn());\n  };\n\n  return (\n    <Button\n      variant=\"contained\"\n      onClick={handleClick}\n      style={{ minWidth: \"unset\" }}\n    >\n      <Meeple />\n      <span style={{ display: \"inline-block\", marginLeft: \"0.5rem\" }}>\n        {players[playerTurn].name}\n      </span>\n    </Button>\n  );\n};\n\nexport default PlayerTurn;\n","import board from \"./json/board\";\n\nconst data = () =>\n  board.map((city) => {\n    const connections = city.connections\n      .split(\",\")\n      .map((con) => con.toString());\n    return {\n      ...city,\n      latitude: parseFloat(city.latitude),\n      longitude: parseFloat(city.longitude),\n      infection: 0,\n      agents: 0,\n      connections,\n      incidents: 0,\n    };\n  });\n\nexport default data;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport fetchData from \"./fetchFromJson\";\n\nexport const name = \"board\";\n\nexport const initialState = {\n  pending: false,\n  error: \"\",\n  cities: [],\n  activeCity: \"\",\n};\n\nexport const fetchCities = createAsyncThunk(`${name}/fetchCities`, async () => {\n  const data = fetchData();\n  return data;\n});\n\nconst slice = createSlice({\n  name,\n  initialState,\n  setActiveCity: (state, action) =>\n    action.payload\n      ? { ...state, activeCity: action.playload }\n      : { ...state, activeCity: \"\" },\n  reducers: {\n    increase: (state, action) => {\n      const { id, key } = action.payload;\n      if (id && key) {\n        const cityIndex = state.cities.findIndex((c) => c.id === id);\n        if (cityIndex >= 0) {\n          const cities = [...state.cities];\n          const inc = cities[cityIndex][key] + 1;\n          const value = inc > 3 ? 3 : inc;\n          cities[cityIndex][key] = value;\n          return { ...state, cities };\n        }\n      }\n      return state;\n    },\n    decrease: (state, action) => {\n      const { id, key } = action.payload;\n      if (id && key) {\n        const cityIndex = state.cities.findIndex((c) => c.id === id);\n        if (cityIndex >= 0) {\n          const cities = [...state.cities];\n          const dec = cities[cityIndex][key] - 1;\n          const value = dec < 1 ? 0 : dec;\n          cities[cityIndex][key] = value;\n          return { ...state, cities };\n        }\n      }\n      return state;\n    },\n  },\n  extraReducers: {\n    [fetchCities.pending]: (state, action) => {\n      return { ...state, pending: true };\n    },\n    [fetchCities.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        cities: action.payload,\n      };\n    },\n    [fetchCities.rejected]: (state, action) => {\n      return { ...state, error: action.error.message, pending: false };\n    },\n  },\n});\nexport const { increase, decrease } = slice.actions;\nexport default slice.reducer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { name as playerKey, setName } from \"app/redux/modules/Player\";\n\nconst PlayerName = ({ id }) => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state[playerKey]);\n  const name = state[id].name;\n\n  const handleChange = ({ target: { value = \"\" } = {} }) => {\n    dispatch(setName({ id, value }));\n  };\n  return (\n    <TextField\n      className=\"PlayerName\"\n      size=\"small\"\n      label=\"Name\"\n      value={name}\n      variant=\"outlined\"\n      onChange={handleChange}\n    />\n  );\n};\n\nPlayerName.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default PlayerName;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst EventCard = ({ name, description, condition }) => {\n  return (\n    <Paper\n      elevation={5}\n      style={{\n        display: \"inline-block\",\n        position: \"relative\",\n        padding: \"0.5rem\",\n        width: \"12rem\",\n        height: \"18rem\",\n        lineHeight: 1,\n        background: \"beige\",\n      }}\n    >\n      <div\n        style={{\n          lineHeight: 1,\n          height: \"100%\",\n          padding: \"1rem\",\n          textAlign: \"center\",\n          background: \"orangered\",\n          boxShadow: \"0px 0px 4px rgba(85,85,85, 0.25)\",\n        }}\n      >\n        <div\n          style={{\n            marginBottom: \"2rem\",\n            fontWeight: 700,\n          }}\n        >\n          {name}\n        </div>\n        <div\n          style={{\n            background: \"antiquewhite\",\n            padding: \"1rem\",\n            fontSize: \"0.75rem\",\n          }}\n        >\n          <div\n            style={{\n              marginBottom: \"0.5rem\",\n              paddingBottom: \"0.5rem\",\n              borderBottom: \"1px solid black\",\n            }}\n          >\n            {description}\n          </div>\n          <div>{condition}</div>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nEventCard.propTypes = {\n  name: PropTypes.string,\n  region: PropTypes.shape({ id: PropTypes.string, name: PropTypes.string }),\n  faction: PropTypes.shape({ id: PropTypes.string, name: PropTypes.string }),\n  number: PropTypes.string,\n};\n\nexport default EventCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport Neutral from \"@material-ui/icons/Language\";\nimport Communist from \"@material-ui/icons/Star\";\nimport Allied from \"@material-ui/icons/Toys\";\nimport Event from \"@material-ui/icons/DoubleArrow\";\nimport \"./Faction.scss\";\n\nconst Faction = ({ id, size, style }) => {\n  const icons = {\n    1: Allied,\n    2: Neutral,\n    3: Communist,\n    4: Event,\n  };\n  const factionId = !(id in icons) ? \"4\" : id;\n  const Comp = factionId in icons ? icons[factionId] : icons[\"4\"];\n  return (\n    <span\n      className={cx({\n        Faction: true,\n        allied: id === \"1\",\n        neutral: id === \"2\",\n        communist: id === \"3\",\n        event: !(id in icons),\n        [size]: size,\n      })}\n    >\n      {Comp && <Comp />}\n    </span>\n  );\n};\n\nFaction.defaultProps = {\n  id: \"4\",\n};\n\nFaction.propTypes = {\n  id: PropTypes.string,\n  size: PropTypes.oneOf([\"small\", \"medium\"]),\n};\n\nexport default Faction;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Region = ({ id, name }) => {\n  const styles = {\n    1: { background: \"dodgerblue\" },\n    2: { background: \"deepskyblue\" },\n    3: { background: \"goldenrod\" },\n    4: { background: \"darkkhaki\" },\n    5: { background: \"peachpuff\" },\n    6: { background: \"lightsalmon\" },\n  };\n  return (\n    <div\n      style={{\n        writingMode: \"vertical-rl\",\n        transform: \"rotate(180deg)\",\n        lineHeight: 1,\n        padding: \"0.5rem\",\n        textTransform: \"uppercase\",\n        fontWeight: 700,\n        ...styles[id],\n      }}\n    >\n      {name}\n    </div>\n  );\n};\n\nRegion.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n};\n\nexport default Region;\n","import React from \"react\";\nimport {\n  Filter1,\n  Filter2,\n  Filter3,\n  Filter4,\n  Filter5,\n  Filter6,\n  Filter7,\n  Filter8,\n  Filter9,\n} from \"@material-ui/icons\";\n\nconst icons = {\n  1: Filter1,\n  2: Filter2,\n  3: Filter3,\n  4: Filter4,\n  5: Filter5,\n  6: Filter6,\n  7: Filter7,\n  8: Filter8,\n  9: Filter9,\n};\nconst Number = ({ value }) => {\n  const Comp = icons[value];\n  return <Comp style={{ lineHeight: 1, fontSize: \"1rem\" }} />;\n};\n\nNumber.propTypes = {};\n\nexport default Number;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Faction from \"components/Faction\";\nimport Region from \"./Region\";\nimport Number from \"./Number\";\n\nconst CityCard = ({ name, region, faction, number }) => {\n  return (\n    <Paper\n      elevation={5}\n      style={{\n        display: \"inline-block\",\n        position: \"relative\",\n        padding: \" 0.75rem 0.5rem 0.25rem\",\n        width: \"12rem\",\n        height: \"18rem\",\n        maxWidth: \"12rem\",\n        maxHeight: \"18rem\",\n        lineHeight: 1,\n        background: \"beige\",\n      }}\n    >\n      <div\n        style={{\n          lineHeight: 1,\n          minHeight: \"100%\",\n          background: \"antiquewhite\",\n          boxShadow: \"0px 0px 4px rgba(85,85,85, 0.25)\",\n        }}\n      >\n        <Grid container spacing={1} style={{ alignItems: \"center\" }}>\n          <Grid item xs={3}>\n            <div style={{ paddingLeft: \"0.25rem\" }}>\n              <Faction id={faction.id} />\n            </div>\n          </Grid>\n          <Grid item xs={9}>\n            <span\n              style={{\n                lineHeight: 0,\n                fontWeight: 700,\n                textTransform: \"uppercase\",\n              }}\n            >\n              {name}\n            </span>\n          </Grid>\n        </Grid>\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"3rem\",\n            left: \"0.5rem\",\n            lineHeight: 1,\n          }}\n        >\n          <Region id={region.id} name={region.name} />\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"0.75rem\",\n            left: \"1rem\",\n            lineHeight: 1,\n          }}\n        >\n          <Number value={number} />\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nCityCard.propTypes = {\n  name: PropTypes.string,\n  region: PropTypes.shape({ id: PropTypes.string, name: PropTypes.string }),\n  faction: PropTypes.shape({ id: PropTypes.string, name: PropTypes.string }),\n  number: PropTypes.string,\n};\n\nexport default CityCard;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Xfer from \"@material-ui/icons/MobileScreenShare\";\nimport Discard from \"@material-ui/icons/Delete\";\nimport { xfer, discard } from \"app/redux/modules/Deck\";\nimport { name as playerKey } from \"app/redux/modules/Player\";\n\nconst hands = [\"1\", \"2\", \"3\", \"4\"];\n\nconst CardActions = ({ hand, card }) => {\n  const dispatch = useDispatch();\n\n  const players = useSelector((state) => state[playerKey]);\n\n  const [isXferOpen, setXferOpen] = useState(null);\n  const handleXfer = (event) => {\n    const { target: { value = \"\" } = {} } = event;\n    setXferOpen(null);\n    if (value) {\n      dispatch(xfer({ from: hand, to: value, card }));\n    }\n  };\n  const handleDiscard = () => {\n    dispatch(discard({ hand, card }));\n  };\n\n  const playerList = hands\n    .filter((h) => h !== hand)\n    .map((playerId) => ({ id: playerId, ...players[playerId] }));\n  return (\n    <Grid container alignItems=\"center\" justify=\"flex-end\" spacing={1}>\n      <Grid item>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          onClick={(e) => {\n            setXferOpen(e.currentTarget);\n          }}\n        >\n          <Xfer />\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={isXferOpen}\n          keepMounted\n          open={Boolean(isXferOpen)}\n          onClose={handleXfer}\n        >\n          {playerList.map((player) => (\n            <MenuItem key={player.id} value={player.id} onClick={handleXfer}>\n              {player.name}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n      <Grid item>\n        <Button size=\"small\" color=\"secondary\" onClick={handleDiscard}>\n          <Discard />\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nCardActions.propTypes = {\n  hand: PropTypes.string,\n  card: PropTypes.string,\n};\n\nexport default CardActions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport EventCard from \"./EventCard\";\nimport CityCard from \"./CityCard\";\nimport CardActions from \"./CardActions\";\nimport \"./PlayerCard.scss\";\n\nconst Card = ({ hand, data }) => {\n  return (\n    <div className=\"PlayerCard\">\n      {!data.number ? <EventCard {...data} /> : <CityCard {...data} />}\n\n      <div className=\"PlayerCard__actions\">\n        <CardActions hand={hand} card={data.id} />\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  hand: PropTypes.string,\n  data: PropTypes.object,\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Faction from \"components/Faction\";\nimport \"./CardSelector.scss\";\n\nconst CardSelector = ({ id, options, label, onChange }) => {\n  const [search, setSearch] = useState(\"\");\n  const data = options.filter((option) => option.name.includes(search));\n  const filtered = Array.isArray(data) ? data : [];\n\n  const handleChange = ({ target: { value = \"\" } = {} }) => {\n    setSearch(value);\n  };\n\n  const handleClick = (value) => {\n    onChange(value);\n  };\n\n  const handleKeyUp = ({ key }) => {\n    if (key !== \"Enter\") {\n      return;\n    }\n    const data = filtered[0];\n    if (data) {\n      onChange(data.id);\n      setSearch(\"\");\n    }\n  };\n\n  return (\n    <div className=\"CardSelector\">\n      <TextField\n        label={label}\n        value={search}\n        variant=\"outlined\"\n        size=\"small\"\n        className=\"CardSelector__input\"\n        onChange={handleChange}\n        onKeyUp={handleKeyUp}\n      />\n      <div className=\"CardSelector__list\">\n        {filtered.length ? (\n          filtered.map((option) => {\n            const factionId = option.faction\n              ? option.faction.id.toString()\n              : null;\n            return (\n              <div\n                key={option.id}\n                tabIndex=\"0\"\n                className=\"CardSelector__item\"\n                onClick={() => handleClick(option.id)}\n                onKeyUp={({ key }) => {\n                  if (key !== \"Enter\") {\n                    return;\n                  }\n                  handleClick(option.id);\n                }}\n              >\n                <div>\n                  <Faction id={factionId} />\n                </div>\n                <div>{option.name}</div>\n              </div>\n            );\n          })\n        ) : (\n          <div style={{ fontSize: \"1rem\", color: \"#c1c1c1\" }}>\n            No cards available\n          </div>\n        )}\n      </div>\n    </div>\n  );\n  /*\n  return (\n    <Autocomplete\n      id={id}\n      clearOnBlur={true}\n      size=\"small\"\n      style={{ width: \"10rem\" }}\n      onChange={handleChange}\n      options={options}\n      autoHighlight\n      getOptionLabel={(option) => option.name}\n      value={null}\n      renderOption={(option) => {\n        const factionId = option.faction ? option.faction.id.toString() : null;\n        return (\n          <>\n            <input type=\"hidden\" name={option.id} value={option.id} />\n            <Faction id={factionId} />\n            <span style={{ display: \"inline-block\", marginLeft: \"0.5rem\" }}>\n              {option.name}\n            </span>\n          </>\n        );\n      }}\n      renderInput={(params) => {\n        return <TextField {...params} label={label} variant=\"outlined\" />;\n      }}\n    />\n  );*/\n};\n\nCardSelector.propTypes = {\n  id: PropTypes.string.isRequired,\n  options: PropTypes.array,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nCardSelector.defaultProps = {\n  label: \"Card Selector\",\n  options: [],\n  onChange: () => null,\n};\nexport default CardSelector;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { name as deckKey, draw } from \"app/redux/modules/Deck\";\nimport CardSelector from \"components/CardSelector\";\n\nconst PlayerDeck = ({ id }) => {\n  const dispatch = useDispatch();\n  const options = useSelector((state) => state[deckKey].deck);\n\n  const handleChange = (value = \"\") => {\n    if (value) {\n      dispatch(draw({ hand: id, card: value.toString() }));\n    }\n  };\n  return (\n    <CardSelector\n      id={`PlayerDeck-${id}`}\n      options={options ? options : []}\n      label={\"Player Deck\"}\n      onChange={handleChange}\n    />\n  );\n};\n\nPlayerDeck.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default PlayerDeck;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { name as deckKey, redraw } from \"app/redux/modules/Deck\";\nimport CardSelector from \"components/CardSelector\";\n\nconst DiscardDeck = ({ id }) => {\n  const dispatch = useDispatch();\n  const options = useSelector((state) => state[deckKey].discard);\n\n  const handleChange = (value = \"\") => {\n    if (value) {\n      dispatch(redraw({ hand: id, card: value.toString() }));\n    }\n  };\n  return (\n    <CardSelector\n      id={`DiscardDeck-${id}`}\n      options={options ? options : []}\n      label={\"Discard Deck\"}\n      onChange={handleChange}\n    />\n  );\n};\n\nDiscardDeck.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default DiscardDeck;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PlayerDeck from \"../PlayerDeck\";\nimport DiscardDeck from \"../DiscardDeck\";\nimport \"./DeckControls.scss\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Add from \"@material-ui/icons/Add\";\nimport { Drawer, Grid } from \"@material-ui/core\";\n\nconst DeckControls = ({ id }) => {\n  const [isOpen, setOpen] = useState(false);\n  return (\n    <div className=\"DeckControls\">\n      <Grid\n        container\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{\n          height: \"100%\",\n        }}\n      >\n        <IconButton size=\"medium\" onClick={() => setOpen(() => true)}>\n          <Add fontSize=\"large\" />\n        </IconButton>\n      </Grid>\n      <Drawer anchor=\"right\" open={isOpen} onClose={() => setOpen(() => false)}>\n        <div style={{ marginBottom: \"1rem\" }}>\n          <PlayerDeck id={id} />\n        </div>\n        <div>\n          <DiscardDeck id={id} />\n        </div>\n      </Drawer>\n    </div>\n  );\n};\n\nDeckControls.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default DeckControls;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport cx from \"classnames\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PlayerCard from \"features/PlayerCard\";\nimport DeckControls from \"./DeckControls\";\nimport { name } from \"app/redux/modules/Deck\";\nimport \"./Hand.scss\";\n\nconst Hand = ({ id, isCollapsed }) => {\n  const data = useSelector((state) => state[name][id]);\n  const { hand = [] } = data;\n  return (\n    <Grid\n      container\n      className={cx({ Hand: true, isCollapsed: isCollapsed })}\n      spacing={2}\n    >\n      {hand.map((card, i) => (\n        <Grid item key={`Hand-${id}-card-${i}`} className=\"Hand__card\">\n          <PlayerCard key={card.id} hand={id} data={card} />\n        </Grid>\n      ))}\n      <Grid\n        item\n        key={`Hand-${id}-card-control`}\n        className=\"Hand__card--controls\"\n      >\n        <DeckControls id={id} />\n      </Grid>\n    </Grid>\n  );\n};\n\nHand.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default Hand;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/IconButton\";\nimport Faction from \"components/Faction\";\nimport { name as playerKey, changeFaction } from \"app/redux/modules/Player\";\n\nconst PlayerFaction = ({ id }) => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state[playerKey][id]);\n\n  const { faction } = data;\n  const handleClick = () => {\n    dispatch(changeFaction(id));\n  };\n\n  return (\n    <Button\n      style={{ padding: 0, margin: 0 }}\n      size=\"small\"\n      onClick={handleClick}\n    >\n      <Faction id={faction.toString()} />\n    </Button>\n  );\n};\n\nPlayerFaction.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default PlayerFaction;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport cx from \"classnames\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { name as playerKey } from \"app/redux/modules/Player\";\nimport \"./AliasInfo.scss\";\n\nconst AliasInfo = ({ id, isExpanded }) => {\n  const data = useSelector((state) => state[playerKey][id]);\n\n  const { passport, faction } = data;\n  const alias = passport.find((ps) => ps.faction === faction.toString()) || {};\n  const {\n    action = {},\n    asset: assetList = {},\n    liability: liabilityList = {},\n  } = alias;\n  const assets = Object.values(assetList).filter((item) => item.title);\n  const liabilities = Object.values(liabilityList).filter((item) => item.title);\n\n  return (\n    <div className={cx({ AliasInfo: true, isExpanded: isExpanded })}>\n      <div className=\"AliasInfo__primary\">\n        <Paper className=\"AliasInfo__tag\">\n          <strong>{alias.role}</strong>\n          {alias.description}\n        </Paper>\n        <Paper className=\"AliasInfo__tag\">\n          <div>\n            <strong>{action.title}</strong>\n          </div>\n          <div>{action.description}</div>\n        </Paper>\n      </div>\n      <div className=\"AliasInfo__secondary\">\n        {Boolean(assets.length) &&\n          assets.map((asset, i) => {\n            return (\n              <Paper key={`tag-${i}`} className=\"AliasInfo__tag\">\n                <div>\n                  <strong>{asset.title}</strong>\n                </div>\n                <div>{asset.description}</div>\n                {asset.city && <div>{asset.city}</div>}\n              </Paper>\n            );\n          })}\n        {Boolean(liabilities.length) &&\n          liabilities.map((liability, i) => {\n            return (\n              <Paper\n                key={`liability-${i}`}\n                className=\"AliasInfo__tag liability\"\n              >\n                <div>\n                  <strong>{liability.title}</strong>\n                </div>\n                {`${liability.description} ${\n                  liability.location ? liability.location : \"\"\n                }`}\n              </Paper>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nAliasInfo.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default AliasInfo;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport PlayerFaction from \"./PlayerFaction\";\nimport AliasInfo from \"./AliasInfo\";\nimport { name as playerKey } from \"app/redux/modules/Player\";\nimport \"./Passport.scss\";\n\nconst Passport = ({ id, isExpanded }) => {\n  const { faction, passport = [] } = useSelector(\n    (state) => state[playerKey][id]\n  );\n  const alias =\n    passport.find((item) => {\n      return item.faction === faction.toString();\n    }) || {};\n  return (\n    <div className=\"Passport\">\n      <Grid container spacing={1} alignItems=\"center\">\n        <Grid item>\n          <PlayerFaction id={id} />\n        </Grid>\n        <Grid item>{alias.name}</Grid>\n      </Grid>\n      <div style={{ paddingTop: \"0.5rem\" }}>\n        <AliasInfo id={id} isExpanded={isExpanded} />\n      </div>\n    </div>\n  );\n};\n\nPassport.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default Passport;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Icon from \"@material-ui/core/SvgIcon\";\nimport Clock from \"@material-ui/icons/AccessTime\";\nimport Counter from \"components/Counter\";\nimport {\n  name as deckKey,\n  addTurnToken,\n  removeTurnToken,\n} from \"app/redux/modules/Deck\";\nimport \"./TurnTokenCounter.scss\";\n\nconst TurnTokenCounter = ({ id }) => {\n  const dispatch = useDispatch();\n  const value = useSelector((state) => state[deckKey][id].turnTokens);\n\n  const handleDecrease = () => {\n    dispatch(removeTurnToken(id));\n  };\n  const handleIncrease = () => {\n    dispatch(addTurnToken(id));\n  };\n  return (\n    <Counter\n      variant=\"flat\"\n      title={\n        <span className=\"TurnToken\">\n          <Icon>\n            <Clock />\n          </Icon>\n        </span>\n      }\n      onDecrease={handleDecrease}\n      onIncrease={handleIncrease}\n      decreaseDisabled={value <= 0}\n      value={value ? value.toString() : \"0\"}\n    />\n  );\n};\n\nTurnTokenCounter.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default TurnTokenCounter;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport cx from \"classnames\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport PlayerName from \"features/Passport/PlayerName\";\nimport Hand from \"features/Hand\";\nimport Passport from \"features/Passport\";\nimport TurnTokenCounter from \"features/Passport/TurnTokenCounter\";\nimport { name as deckName } from \"app/redux/modules/Deck\";\nimport \"./PlayerPanel.scss\";\n\nconst PlayerPanel = ({ id }) => {\n  const [isPassportOpen, setPassportOpen] = useState(false);\n  const deck = useSelector((state) => state[deckName]);\n  const { turnId = \"\" } = deck[id];\n  const playerTurn = deck.playerTurn.toString();\n  return (\n    <Paper\n      className={cx({\n        PlayerPanel: true,\n        isTurn: playerTurn === id,\n        isExpanded: isPassportOpen,\n      })}\n      elevation={playerTurn === id ? 4 : 2}\n    >\n      <div className=\"PlayerPanel__header\">\n        <Grid container spacing={1}>\n          <Grid item>\n            <PlayerName id={id} />\n          </Grid>\n          <Grid item>\n            <span style={{ fontSize: \"1rem\" }}>{`Player ${turnId}`}</span>\n          </Grid>\n          <Grid item>\n            <TurnTokenCounter id={id} />\n          </Grid>\n        </Grid>\n      </div>\n      <div className=\"PlayerPanel__content\">\n        <div>\n          <Passport id={id} isExpanded={isPassportOpen} />\n        </div>\n        <div>\n          <IconButton\n            className=\"PlayerPanel__expand\"\n            size=\"small\"\n            onClick={() => setPassportOpen((state) => !state)}\n          >\n            <ChevronRight fontSize=\"small\" />\n          </IconButton>\n        </div>\n        <div>\n          <div className=\"PlayerPanel__hand\">\n            <Hand id={id} />\n          </div>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nPlayerPanel.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default PlayerPanel;\n","export default __webpack_public_path__ + \"static/media/agent.a6447888.svg\";","import * as React from \"react\";\nimport { BaseControl } from \"react-map-gl\";\nimport { Icon } from \"@material-ui/core\";\nimport Faction from \"components/Faction\";\nimport Agent from \"components/agent.svg\";\n\nclass Marker extends BaseControl {\n  _render() {\n    const {\n      id,\n      name,\n      longitude,\n      latitude,\n      faction,\n      region,\n      onClick,\n      agents = 1,\n      infection = 0,\n      incident = 0,\n      surveilance = 0,\n    } = this.props;\n\n    const [x, y] = this._context.viewport.project([longitude, latitude]);\n\n    const markerStyle = {\n      position: \"absolute\",\n      left: x,\n      top: y,\n    };\n    const regionColor = {\n      1: \"dodgerblue\",\n      2: \"deepskyblue\",\n      3: \"goldenrod\",\n      4: \"darkkhaki\",\n      5: \"peachpuff\",\n      6: \"lightsalmon\",\n    };\n    const cityStyle = {\n      padding: \"0.5rem\",\n      borderRadius: 4,\n      cursor: \"pointer\",\n      background: \"beige\",\n      borderLeft: `4px solid ${regionColor[region]}`,\n    };\n\n    const cityHeader = {\n      display: \"flex\",\n      alignItems: \"center\",\n    };\n    const handleClick = () => {\n      onClick(id);\n    };\n    return (\n      <div ref={this._containerRef} style={markerStyle}>\n        <div onClick={handleClick} style={cityStyle}>\n          <div style={cityHeader}>\n            <div>\n              <Faction id={faction.toString()} size=\"small\" />\n            </div>\n            <div style={{ fontSize: \"0.75rem\", marginLeft: \"0.5rem\" }}>\n              {name}\n            </div>\n          </div>\n          <div style={{ paddingTop: \"0.25rem\" }}>\n            {Array(agents).map((agent) => (\n              <img\n                alt=\"agent\"\n                style={{ width: \"1.25rem\", height: \"1.25rem\" }}\n                src={Agent}\n              />\n            ))}\n          </div>\n          <div style={{ paddingTop: \"0.25rem\" }}>\n            {Array(agents).map((agent) => (\n              <span\n                style={{\n                  display: \"inline-block\",\n                  background: \"limegreen\",\n                  width: \"1rem\",\n                  height: \"1rem\",\n                }}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Marker;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport { Layer, Source, StaticMap } from \"react-map-gl\";\nimport Marker from \"./Marker\";\nimport useConnections from \"./useConnections\";\n\nconst Map = ({ data }) => {\n  const [viewport, setViewport] = useState({\n    mapStyle: \"mapbox://styles/mapbox/dark-v9\",\n    width: \"100%\",\n    height: \"100%\",\n    latitude: 10,\n    longitude: 25,\n    zoom: 2,\n  });\n\n  const connections = {\n    type: \"Feature\",\n    properties: {},\n    geometry: {\n      type: \"LineString\",\n      coordinates: [\n        [-122.48369693756104, 37.83381888486939],\n        [-122.48348236083984, 37.83317489144141],\n        [-122.48339653015138, 37.83270036637107],\n        [-122.48356819152832, 37.832056363179625],\n        [-122.48404026031496, 37.83114119107971],\n        [-122.48404026031496, 37.83049717427869],\n        [-122.48348236083984, 37.829920943955045],\n        [-122.48356819152832, 37.82954808664175],\n        [-122.48507022857666, 37.82944639795659],\n        [-122.48610019683838, 37.82880236636284],\n        [-122.48695850372314, 37.82931081282506],\n        [-122.48700141906738, 37.83080223556934],\n        [-122.48751640319824, 37.83168351665737],\n        [-122.48803138732912, 37.832158048267786],\n        [-122.48888969421387, 37.83297152392784],\n        [-122.48987674713133, 37.83263257682617],\n        [-122.49043464660643, 37.832937629287755],\n        [-122.49125003814696, 37.832429207817725],\n        [-122.49163627624512, 37.832564787218985],\n        [-122.49223709106445, 37.83337825839438],\n        [-122.49378204345702, 37.83368330777276],\n      ],\n    },\n  };\n\n  return (\n    <StaticMap\n      {...viewport}\n      onViewportChange={(nextViewport) => setViewport(nextViewport)}\n    >\n      <Source id=\"connections\" type=\"geojson\" data={connections}>\n        <Layer\n          id=\"connection-route\"\n          type=\"line\"\n          paint={{\n            \"line-color\": \"#EAEAEA\",\n            \"line-width\": 30,\n          }}\n        />\n      </Source>\n      {data.map((item) => (\n        <Marker\n          key={item.id}\n          id={item.id}\n          name={item.name}\n          latitude={item.latitude}\n          longitude={item.longitude}\n          faction={item.faction}\n          region={item.region}\n          draggable={true}\n          offsetLeft={-100}\n          offsetTop={-100}\n          onClick={(value) => console.log(value)}\n        />\n      ))}\n    </StaticMap>\n  );\n};\n\nexport default Map;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Drawer } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { name as boardKey, increase, decrease } from \"app/redux/modules/Board\";\n\nconst BoardControls = (props) => {\n  const { cities = [], activeCity } = useSelector((state) => state[boardKey]);\n  const city = cities.find(({ id }) => activeCity);\n  const handleIncrease = (key) => {\n    console.log({ id: activeCity, key });\n  };\n  const handleDecrease = (key) => {\n    console.log({ id: activeCity, key });\n  };\n  return (\n    <Drawer>\n      <div>\n        {\"Agents\"}\n        <Button onClick={() => handleIncrease(\"agents\")}>Increase</Button>\n        <Button onClick={() => handleDecrease(\"agents\")}>Decrease</Button>\n      </div>\n      <div>\n        {\"Infection\"}\n        <Button onClick={() => handleIncrease(\"infection\")}>Increase</Button>\n        <Button onClick={() => handleDecrease(\"infection\")}>Decrease</Button>\n      </div>\n      <div>\n        {\"Incident\"}\n        <Button onClick={() => handleIncrease(\"incident\")}>Increase</Button>\n        <Button onClick={() => handleDecrease(\"incident\")}>Decrease</Button>\n      </div>\n    </Drawer>\n  );\n};\n\nBoardControls.propTypes = {};\n\nexport default BoardControls;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Map from \"features/Board/Map\";\nimport BoardControls from \"./BoardControls\";\nimport { name as boardKey } from \"app/redux/modules/Board\";\n\nimport \"./Board.scss\";\n\nconst Board = () => {\n  const { cities = [] } = useSelector((state) => state[boardKey]);\n  const data = cities.filter(\n    (item) => !isNaN(item.latitude) && !isNaN(item.longitude)\n  );\n  return (\n    <div className=\"Board\">\n      <div className=\"Board__controls\"></div>\n      <div className=\"Board__map\">{data.length && <Map data={data} />}</div>\n      <BoardControls />\n    </div>\n  );\n};\n\nexport default Board;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Reset from \"./features/Reset\";\nimport IncidentCounter from \"./features/IncidentCounter\";\nimport EscalationCounter from \"./features/EscalationCounter\";\nimport PlayerTurn from \"./features/PlayerTurn\";\n\nimport { fetchCities } from \"./app/redux/modules/Board\";\nimport { fetchCards } from \"./app/redux/modules/Deck\";\nimport { fetchPassports } from \"./app/redux/modules/Player\";\nimport PlayerPanel from \"features/PlayerPanel\";\nimport Board from \"features/Board\";\nimport { Button, IconButton } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\n\nconst App = ({ hands }) => {\n  const dispatch = useDispatch();\n\n  const [showBoard, setShowBoard] = useState(false);\n  const handleBoard = () => {\n    setShowBoard((state) => !state);\n  };\n  useEffect(() => {\n    dispatch(fetchCities());\n    dispatch(fetchCards());\n    dispatch(fetchPassports());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\" style={{ marginBottom: \"1rem\" }}>\n        <Toolbar>\n          <Typography variant=\"h6\">Pandemic Player Cards</Typography>\n          <div style={{ marginLeft: \"2rem\" }}>\n            <PlayerTurn />\n          </div>\n          <div style={{ marginLeft: \"2rem\" }}>\n            <EscalationCounter />\n          </div>\n          <div style={{ marginLeft: \"2rem\" }}>\n            <IncidentCounter />\n          </div>\n          <div style={{ marginLeft: \"2rem\" }}>\n            <Button variant=\"contained\" onClick={handleBoard}>\n              Show Board\n            </Button>\n          </div>\n          <div style={{ flexGrow: 1, textAlign: \"right\" }}>\n            <Reset />\n          </div>\n        </Toolbar>\n      </AppBar>\n      {!showBoard &&\n        hands.map((hand, i) => <PlayerPanel key={`hand-${i}`} id={hand} />)}\n      {showBoard && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            zIndex: 9001,\n            background: \"white\",\n          }}\n        >\n          <IconButton onClick={handleBoard}>\n            <Close />\n          </IconButton>\n          <Board />\n        </div>\n      )}\n    </div>\n  );\n};\n\nApp.defaultProps = {\n  hands: [\"1\", \"2\", \"3\", \"4\"],\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { Cards } from \"./modules/Cards\";\nimport { Deck } from \"./modules/Deck\";\nimport { Hand } from \"./modules/Hand\";\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_API_ROOT,\n  cache: new InMemoryCache({\n    typePolicies: {\n      Cards,\n      Deck,\n      Hand,\n    },\n  }),\n});\n\nexport default client;\n","export const Cards = {\n  keyFields: [\"id\"],\n};\n","export const Deck = {\n  keyFields: [\"id\"],\n};\n","export const Hand = {\n  keyFields: [\"id\"],\n};\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { loadState, saveState } from \"./sessionStorage\";\nimport board, { name as BoardName } from \"./modules/Board\";\nimport deck, { name as DeckName } from \"./modules/Deck\";\nimport player, { name as PlayerName } from \"./modules/Player\";\n\nconst storeKey = \"PANDEMIC_ZERO_STORE\";\n\nconst preloadedState = loadState(storeKey);\n\nconst store = configureStore({\n  preloadedState,\n  reducer: {\n    [BoardName]: board,\n    [DeckName]: deck,\n    [PlayerName]: player,\n  },\n});\n\nstore.subscribe(() => {\n  saveState(storeKey, store.getState());\n});\n\nexport default store;\n","/* istanbul ignore file */\n\nexport const loadState = (key) => {\n  try {\n    const serializedState = sessionStorage.getItem(key);\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (error) {\n    return undefined;\n  }\n};\n\nexport const saveState = (key, state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    sessionStorage.setItem(key, serializedState);\n  } catch (error) {\n    // Ignore write errors.\n  }\n};\n","import { Provider as Redux } from \"react-redux\";\nimport { ApolloProvider as Apollo } from \"@apollo/client\";\n\nimport gqlClient from \"app/gql\";\nimport reduxClient from \"app/redux\";\n\nconst ReduxProvider = ({ children }) => (\n  <Redux store={reduxClient}>{children}</Redux>\n);\nconst ApolloProvider = ({ children }) => (\n  <Apollo client={gqlClient}>{children}</Apollo>\n);\n\nconst GQL_FLAG = process.env.REACT_APP_GQL_FLAG;\nlet Provider = ReduxProvider;\nif (GQL_FLAG) {\n  Provider = ApolloProvider;\n}\n\nexport default Provider;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./Root\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport AppProvider from \"./app\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <AppProvider>\n      <Root />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}