{"version":3,"sources":["app/redux/modules/Deck/fetchFromJson.js","app/redux/modules/Deck/index.js","components/EventCard/index.js","components/CityCard/Faction.js","components/CityCard/Region.js","components/CityCard/Number.js","components/CityCard/index.js","components/Deck/index.js","components/CardActions/index.js","components/Hand/index.js","components/Reset/index.js","Root.js","reportWebVitals.js","app/gql/index.js","app/gql/modules/Cards/index.js","app/gql/modules/Deck/index.js","app/gql/modules/Hand/index.js","app/redux/index.js","app/redux/sessionStorage.js","app/index.js","index.js"],"names":["data","console","log","cards","factions","regions","map","card","region","faction","name","initialState","pending","error","fetchData","deck","discard","1","2","3","4","fetchCards","createAsyncThunk","a","slice","createSlice","reducers","draw","state","action","handId","payload","hand","cardId","find","item","id","filter","push","xfer","from","to","fromHand","toHand","newFromHand","redraw","reset","extraReducers","fulfilled","rejected","message","actions","EventCard","description","condition","Paper","elevation","style","display","position","padding","width","height","lineHeight","background","textAlign","boxShadow","marginBottom","fontWeight","fontSize","paddingBottom","borderBottom","Faction","icon","container","alignItems","justifyItems","justifyContent","margin","borderRadius","color","Region","writingMode","transform","textTransform","5","6","icons","Filter1","Filter2","Filter3","Filter4","Filter5","Filter6","7","Filter7","8","Filter8","9","Filter9","Number","value","Comp","CityCard","number","maxWidth","maxHeight","minHeight","Grid","spacing","xs","bottom","left","Deck","label","location","dispatch","useDispatch","useSelector","FormControl","InputLabel","Select","labelId","minWidth","onChange","target","MenuItem","hands","CardActions","useState","isXferOpen","setXferOpen","handleXfer","players","h","size","onClick","e","currentTarget","Menu","anchorEl","keepMounted","open","Boolean","onClose","player","Hand","length","i","marginTop","Reset","props","isResetting","setIsResetting","Button","variant","App","useEffect","className","AppBar","Toolbar","Typography","flexGrow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","process","REACT_APP_API_ROOT","cache","InMemoryCache","typePolicies","Cards","keyFields","storeKey","preloadedState","key","serializedState","sessionStorage","getItem","JSON","parse","loadState","store","configureStore","reducer","subscribe","stringify","setItem","saveState","getState","Provider","children","reduxClient","REACT_APP_GQL_FLAG","gqlClient","ReactDOM","render","StrictMode","CssBaseline","Root","document","getElementById"],"mappings":"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","file":"static/js/main.77afa122.chunk.js","sourcesContent":["import cards from \"./json/cards\";\nimport factions from \"./json/factions\";\nimport regions from \"./json/regions\";\n\nconst data = () => {\n  console.log(cards, factions, regions);\n  return cards.map((card) => ({\n    ...card,\n    region: regions[card.region],\n    faction: factions[card.faction],\n  }));\n};\n\nexport default data;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport fetchData from \"./fetchFromJson\";\n\nexport const name = \"deck\";\n\nexport const initialState = {\n  pending: false,\n  error: \"\",\n  cards: fetchData(),\n  deck: [],\n  discard: [],\n  1: [],\n  2: [],\n  3: [],\n  4: [],\n};\n\nexport const fetchCards = createAsyncThunk(`${name}/fetchCards`, async () => {\n  const data = fetchData();\n  console.log(data);\n  return data;\n});\n\nconst slice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    draw: (state, action) => {\n      const handId = action.payload.hand;\n      const cardId = action.payload.card;\n      const hand = [...state[handId]];\n      const card = state.cards.find((item) => item.id === cardId);\n      const deck = state.deck.filter((item) => item.id !== cardId);\n      hand.push(card);\n\n      return { ...state, deck, [handId]: hand };\n    },\n    discard: (state, action) => {\n      const handId = action.payload.hand;\n      const cardId = action.payload.card;\n      const discard = [...state.discard];\n      const card = state.cards.find((item) => item.id === cardId);\n      discard.push(card);\n      const hand = state[handId].filter((item) => item.id !== cardId);\n\n      return { ...state, discard, [handId]: hand };\n    },\n    xfer: (state, action) => {\n      const from = action.payload.from;\n      const to = action.payload.to;\n      const cardId = action.payload.card;\n      const fromHand = [...state[from]];\n      const toHand = [...state[to]];\n      const card = state.cards.find((item) => item.id === cardId);\n      toHand.push(card);\n      const newFromHand = fromHand.filter((item) => item.id !== cardId);\n\n      return { ...state, [from]: newFromHand, [to]: toHand };\n    },\n    redraw: (state, action) => {\n      const handId = action.payload.hand;\n      const cardId = action.payload.card;\n      const hand = [...state[handId]];\n      const card = state.cards.find((item) => item.id === cardId);\n      const discard = state.discard.filter((item) => item.id !== cardId);\n      hand.push(card);\n\n      return { ...state, discard, [handId]: hand };\n    },\n    reset: (state) => ({\n      ...initialState,\n      cards: state.cards,\n      deck: state.cards,\n    }),\n  },\n  extraReducers: {\n    [fetchCards.pending]: (state, action) => {\n      console.log(\"pending\", action);\n      return { ...state, pending: true };\n    },\n    [fetchCards.fulfilled]: (state, action) => {\n      console.log(\"fulfilled\", action);\n      return {\n        ...state,\n        cards: action.payload,\n        deck: action.payload,\n        pending: false,\n      };\n    },\n    [fetchCards.rejected]: (state, action) => {\n      console.log(\"rejected\", action);\n      return { ...state, error: action.error.message, pending: false };\n    },\n  },\n});\nexport const { draw, discard, xfer, redraw, reset } = slice.actions;\nexport default slice.reducer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst EventCard = ({ name, description, condition }) => {\n  return (\n    <Paper\n      elevation={5}\n      style={{\n        display: \"inline-block\",\n        position: \"relative\",\n        padding: \"0.5rem\",\n        width: \"12rem\",\n        height: \"18rem\",\n        lineHeight: 1,\n        background: \"beige\",\n      }}\n    >\n      <div\n        style={{\n          lineHeight: 1,\n          height: \"100%\",\n          padding: \"1rem\",\n          textAlign: \"center\",\n          background: \"orangered\",\n          boxShadow: \"0px 0px 4px rgba(85,85,85, 0.25)\",\n        }}\n      >\n        <div\n          style={{\n            marginBottom: \"2rem\",\n            fontWeight: 700,\n          }}\n        >\n          {name}\n        </div>\n        <div\n          style={{\n            background: \"antiquewhite\",\n            padding: \"1rem\",\n            fontSize: \"0.75rem\",\n          }}\n        >\n          <div\n            style={{\n              marginBottom: \"0.5rem\",\n              paddingBottom: \"0.5rem\",\n              borderBottom: \"1px solid black\",\n            }}\n          >\n            {description}\n          </div>\n          <div>{condition}</div>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nEventCard.propTypes = {\n  name: PropTypes.string,\n  region: PropTypes.shape({ id: PropTypes.string, name: PropTypes.string }),\n  faction: PropTypes.shape({ id: PropTypes.string, name: PropTypes.string }),\n  number: PropTypes.string,\n};\n\nexport default EventCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Neutral from \"@material-ui/icons/Language\";\nimport Communist from \"@material-ui/icons/Star\";\nimport Allied from \"@material-ui/icons/Toys\";\n\nconst Faction = ({ icon }) => {\n  const container = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    justifyContent: \"center\",\n    width: \"2rem\",\n    height: \"2rem\",\n    margin: \"0.25rem 0.5rem 0\",\n    borderRadius: \"50%\",\n    textAlign: \"center\",\n  };\n  if (icon === \"1\") {\n    return (\n      <div style={{ ...container, background: \"navy\" }}>\n        <Allied style={{ color: \"aqua\" }} />\n      </div>\n    );\n  }\n  if (icon === \"3\") {\n    return (\n      <div style={{ ...container, background: \"darkred\" }}>\n        <Communist style={{ color: \"yellow\" }} />\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ ...container, background: \"slategray\" }}>\n      <Neutral style={{ color: \"snow\" }} />\n    </div>\n  );\n};\n\nFaction.propTypes = {\n  icon: PropTypes.string,\n};\n\nexport default Faction;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Region = ({ id, name }) => {\n  const styles = {\n    1: { background: \"dodgerblue\" },\n    2: { background: \"deepskyblue\" },\n    3: { background: \"goldenrod\" },\n    4: { background: \"darkkhaki\" },\n    5: { background: \"peachpuff\" },\n    6: { background: \"lightsalmon\" },\n  };\n  return (\n    <div\n      style={{\n        writingMode: \"vertical-rl\",\n        transform: \"rotate(180deg)\",\n        lineHeight: 1,\n        padding: \"0.5rem\",\n        textTransform: \"uppercase\",\n        fontWeight: 700,\n        ...styles[id],\n      }}\n    >\n      {name}\n    </div>\n  );\n};\n\nRegion.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n};\n\nexport default Region;\n","import React from \"react\";\nimport {\n  Filter1,\n  Filter2,\n  Filter3,\n  Filter4,\n  Filter5,\n  Filter6,\n  Filter7,\n  Filter8,\n  Filter9,\n} from \"@material-ui/icons\";\n\nconst icons = {\n  1: Filter1,\n  2: Filter2,\n  3: Filter3,\n  4: Filter4,\n  5: Filter5,\n  6: Filter6,\n  7: Filter7,\n  8: Filter8,\n  9: Filter9,\n};\nconst Number = ({ value }) => {\n  const Comp = icons[value];\n  return <Comp style={{ lineHeight: 1, fontSize: \"1rem\" }} />;\n};\n\nNumber.propTypes = {};\n\nexport default Number;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Faction from \"./Faction\";\nimport Region from \"./Region\";\nimport Number from \"./Number\";\n\nconst CityCard = ({ name, region, faction, number }) => {\n  return (\n    <Paper\n      elevation={5}\n      style={{\n        display: \"inline-block\",\n        position: \"relative\",\n        padding: \" 0.75rem 0.5rem 0.25rem\",\n        width: \"12rem\",\n        height: \"18rem\",\n        maxWidth: \"12rem\",\n        maxHeight: \"18rem\",\n        lineHeight: 1,\n        background: \"beige\",\n      }}\n    >\n      <div\n        style={{\n          lineHeight: 1,\n          minHeight: \"100%\",\n          background: \"antiquewhite\",\n          boxShadow: \"0px 0px 4px rgba(85,85,85, 0.25)\",\n        }}\n      >\n        <Grid container spacing={1} style={{ alignItems: \"center\" }}>\n          <Grid item xs={3}>\n            <Faction icon={faction.id} />\n          </Grid>\n          <Grid item xs={9}>\n            <span\n              style={{\n                lineHeight: 0,\n                fontWeight: 700,\n                textTransform: \"uppercase\",\n              }}\n            >\n              {name}\n            </span>\n          </Grid>\n        </Grid>\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"3rem\",\n            left: \"0.5rem\",\n            lineHeight: 1,\n          }}\n        >\n          <Region id={region.id} name={region.name} />\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"0.75rem\",\n            left: \"1rem\",\n            lineHeight: 1,\n          }}\n        >\n          <Number value={number} />\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nCityCard.propTypes = {\n  name: PropTypes.string,\n  region: PropTypes.shape({ id: PropTypes.string, name: PropTypes.string }),\n  faction: PropTypes.shape({ id: PropTypes.string, name: PropTypes.string }),\n  number: PropTypes.string,\n};\n\nexport default CityCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { draw, redraw } from \"app/redux/modules/Deck\";\n\nconst Deck = ({ id, hand, label, location = \"deck\" }) => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.deck);\n  const deck = state[location];\n\n  const handleChange = ({ target: { value = \"\" } = {} }) => {\n    if (location === \"discard\") {\n      dispatch(redraw({ hand, card: value }));\n    } else {\n      dispatch(draw({ hand, card: value }));\n    }\n  };\n  return (\n    <FormControl>\n      <InputLabel id={id}>{label}</InputLabel>\n      <Select\n        labelId={id}\n        style={{ minWidth: \"12rem\" }}\n        value=\"\"\n        onChange={handleChange}\n      >\n        <MenuItem key={\"empty\"} value={\"\"} />\n        {deck.map((card) => (\n          <MenuItem key={card.id} value={card.id}>\n            {card.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nDeck.propTypes = { hand: PropTypes.string };\n\nexport default Deck;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport Button from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Xfer from \"@material-ui/icons/MobileScreenShare\";\nimport Discard from \"@material-ui/icons/Delete\";\nimport { xfer, discard } from \"app/redux/modules/Deck\";\n\nconst hands = [\"1\", \"2\", \"3\", \"4\"];\n\nconst CardActions = ({ hand, card }) => {\n  const dispatch = useDispatch();\n\n  const [isXferOpen, setXferOpen] = useState(null);\n  const handleXfer = ({ target: { value = \"\" } = {} }) => {\n    setXferOpen(null);\n    if (value) {\n      dispatch(xfer({ from: hand, to: value, card }));\n    }\n  };\n  const handleDiscard = () => {\n    dispatch(discard({ hand, card }));\n  };\n\n  const players = hands.filter((h) => h !== hand);\n  return (\n    <Grid\n      container\n      spacing=\"1\"\n      style={{\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n      }}\n    >\n      <Grid item>\n        <Button\n          size=\"small\"\n          color=\"success\"\n          onClick={(e) => {\n            setXferOpen(e.currentTarget);\n          }}\n        >\n          <Xfer />\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={isXferOpen}\n          keepMounted\n          open={Boolean(isXferOpen)}\n          onClose={handleXfer}\n        >\n          {players.map((player) => (\n            <MenuItem value={player} onClick={handleXfer}>\n              {player}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n      <Grid item>\n        <Button size=\"small\" color=\"error\" onClick={handleDiscard}>\n          <Discard />\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nCardActions.propTypes = {\n  hand: PropTypes.string,\n  card: PropTypes.string,\n};\n\nexport default CardActions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useSelector } from \"react-redux\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport EventCard from \"components/EventCard\";\nimport CityCard from \"components/CityCard\";\nimport Deck from \"components/Deck\";\nimport { name as deckName } from \"app/redux/modules/Deck\";\nimport CardActions from \"../CardActions\";\n\nconst Hand = ({ id }) => {\n  const hand = useSelector((state) => state[deckName][id]);\n  return (\n    <div\n      style={{\n        padding: \"0 2rem 1rem\",\n        borderBottom: \"1px solid lightgray\",\n      }}\n    >\n      <Grid\n        container\n        spacing=\"2\"\n        style={{ alignItems: \"flex-end\", marginBottom: \"2rem\" }}\n      >\n        <Grid item>\n          <span\n            style={{\n              display: \"inline-block\",\n              marginBottom: \"0.5rem\",\n              fontSize: \"1rem\",\n              lineHeight: 1,\n              fontWeight: 700,\n              textTransform: \"uppercase\",\n            }}\n          >{`Player ${id}`}</span>\n        </Grid>\n        <Grid item>\n          <Deck id={`hand-${id}`} hand={id} label=\"Player Deck\" />\n        </Grid>\n        <Grid item>\n          <Deck\n            id={`hand-discard-${id}`}\n            hand={id}\n            location=\"discard\"\n            label=\"Discard Deck\"\n          />\n        </Grid>\n        <Grid item>\n          {hand.length > 7 && (\n            <span\n              style={{\n                fontWeight: 700,\n                lineHeight: 1,\n                color: \"red\",\n                display: \"inline-block\",\n                marginBottom: \"0.5rem\",\n              }}\n            >\n              Player has too many cards.\n            </span>\n          )}\n        </Grid>\n      </Grid>\n      <Grid container spacing=\"4\">\n        {hand.map((card, i) => (\n          <Grid item style={{ position: \"relative\" }}>\n            {!card.number ? <EventCard {...card} /> : <CityCard {...card} />}\n\n            <div style={{ marginTop: \"0.5rem\" }}>\n              <CardActions hand={id} card={card.id} />\n            </div>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nHand.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default Hand;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { reset } from \"app/redux/modules/Deck\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Reset = (props) => {\n  const dispatch = useDispatch();\n  const [isResetting, setIsResetting] = useState(\"\");\n\n  const handleClick = () => {\n    if (!isResetting) {\n      setIsResetting(\"Really?\");\n    } else {\n      dispatch(reset());\n      setIsResetting(\"\");\n    }\n  };\n  return (\n    <Button variant=\"contained\" color=\"secondary\" onClick={handleClick}>\n      {isResetting ? isResetting : \"Reset\"}\n    </Button>\n  );\n};\n\nexport default Reset;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { fetchCards } from \"./app/redux/modules/Deck\";\nimport Hand from \"./components/Hand\";\nimport Reset from \"./components/Reset\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const hands = [\"1\", \"2\", \"3\", \"4\"];\n\n  useEffect(() => {\n    dispatch(fetchCards());\n  }, [dispatch, hands]);\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography style={{ flexGrow: 1 }} variant=\"h6\">\n            Pandemic Player Cards\n          </Typography>\n          <Reset />\n        </Toolbar>\n      </AppBar>\n      {hands.map((hand, i) => (\n        <Hand key={`hand-${i}`} id={hand} />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { Cards } from \"./modules/Cards\";\nimport { Deck } from \"./modules/Deck\";\nimport { Hand } from \"./modules/Hand\";\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_API_ROOT,\n  cache: new InMemoryCache({\n    typePolicies: {\n      Cards,\n      Deck,\n      Hand,\n    },\n  }),\n});\n\nexport default client;\n","export const Cards = {\n  keyFields: [\"id\"],\n};\n","export const Deck = {\n  keyFields: [\"id\"],\n};\n","export const Hand = {\n  keyFields: [\"id\"],\n};\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { loadState, saveState } from \"./sessionStorage\";\nimport deck from \"./modules/Deck\";\n\nconst storeKey = \"PANDEMIC_ZERO_STORE\";\n\nconst preloadedState = loadState(storeKey);\n\nconst store = configureStore({\n  preloadedState,\n  reducer: {\n    deck,\n  },\n});\n\nstore.subscribe(() => {\n  saveState(storeKey, store.getState());\n});\n\nexport default store;\n","/* istanbul ignore file */\n\nexport const loadState = (key) => {\n  try {\n    const serializedState = sessionStorage.getItem(key);\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (error) {\n    return undefined;\n  }\n};\n\nexport const saveState = (key, state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    sessionStorage.setItem(key, serializedState);\n  } catch (error) {\n    // Ignore write errors.\n  }\n};\n","import { Provider as Redux } from \"react-redux\";\nimport { ApolloProvider as Apollo } from \"@apollo/client\";\n\nimport gqlClient from \"app/gql\";\nimport reduxClient from \"app/redux\";\n\nconst ReduxProvider = ({ children }) => (\n  <Redux store={reduxClient}>{children}</Redux>\n);\nconst ApolloProvider = ({ children }) => (\n  <Apollo client={gqlClient}>{children}</Apollo>\n);\n\nconst GQL_FLAG = process.env.REACT_APP_GQL_FLAG;\nlet Provider = ReduxProvider;\nif (GQL_FLAG) {\n  Provider = ApolloProvider;\n}\n\nexport default Provider;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./Root\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport AppProvider from \"./app\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <AppProvider>\n      <Root />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}