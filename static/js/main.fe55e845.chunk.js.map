{"version":3,"sources":["app/redux/modules/Deck/fetchFromJson.js","app/redux/modules/Deck/index.js","features/PlayerCard/EventCard/index.js","components/Faction.js","features/PlayerCard/CityCard/Region.js","features/PlayerCard/CityCard/Number.js","features/PlayerCard/CityCard/index.js","features/PlayerCard/CardActions/index.js","features/PlayerCard/index.js","components/CardSelector/index.js","features/Hand/DiscardDeck/index.js","features/Hand/PlayerDeck/index.js","features/Hand/PlayerName/index.js","components/Counter/index.js","features/Hand/TurnTokenCounter/index.js","features/Hand/index.js","features/Reset/index.js","features/IncidentCounter/index.js","features/EscalationCounter/index.js","components/Meeple.js","features/PlayerTurn/index.js","Root.js","reportWebVitals.js","app/gql/index.js","app/gql/modules/Cards/index.js","app/gql/modules/Deck/index.js","app/gql/modules/Hand/index.js","app/redux/index.js","app/redux/sessionStorage.js","app/index.js","index.js"],"names":["data","cards","map","card","region","regions","faction","factions","name","initialState","pending","error","fetchData","deck","discard","playerTurn","1","turnTokens","hand","2","3","4","incident","escalation","fetchCards","createAsyncThunk","a","slice","createSlice","reducers","advanceTurn","state","action","advance","value","setName","payload","id","addTurnToken","handId","removeTurnToken","dec","draw","cardId","find","item","filter","push","xfer","from","to","fromHand","toHand","newFromHand","redraw","increase","decrease","reset","extraReducers","fulfilled","rejected","message","actions","EventCard","description","condition","Paper","elevation","style","display","position","padding","width","height","lineHeight","background","textAlign","boxShadow","marginBottom","fontWeight","fontSize","paddingBottom","borderBottom","Faction","icon","container","alignItems","justifyItems","justifyContent","margin","borderRadius","color","transform","Region","writingMode","textTransform","5","6","icons","Filter1","Filter2","Filter3","Filter4","Filter5","Filter6","7","Filter7","8","Filter8","9","Filter9","Number","Comp","CityCard","number","maxWidth","maxHeight","minHeight","Grid","spacing","xs","bottom","left","hands","CardActions","dispatch","useDispatch","useState","isXferOpen","setXferOpen","handleXfer","target","players","h","size","onClick","e","currentTarget","Menu","anchorEl","keepMounted","open","Boolean","onClose","player","MenuItem","Card","className","CardSelector","options","label","onChange","Autocomplete","clearOnBlur","event","children","input","autoHighlight","getOptionLabel","option","renderOption","factionId","type","renderInput","params","TextField","variant","defaultProps","DiscardDeck","useSelector","toString","PlayerDeck","console","log","PlayerName","Counter","title","onDecrease","decreaseDisabled","onIncrease","increaseDisabled","cx","disabled","TurnTokenCounter","Hand","profileOpen","setProfileOpen","isTurn","length","Hand__cardContainer","hasCards","isCollapsed","i","Reset","props","isResetting","setIsResetting","Button","IncidentCounter","EscalationCounter","Meeple","SvgIcon","viewBox","d","PlayerTurn","minWidth","App","useEffect","AppBar","Toolbar","Typography","marginLeft","flexGrow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","process","REACT_APP_API_ROOT","cache","InMemoryCache","typePolicies","Cards","keyFields","Deck","storeKey","preloadedState","key","serializedState","sessionStorage","getItem","JSON","parse","loadState","store","configureStore","reducer","subscribe","stringify","setItem","saveState","getState","Provider","reduxClient","REACT_APP_GQL_FLAG","gqlClient","ReactDOM","render","StrictMode","CssBaseline","Root","document","getElementById"],"mappings":"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","file":"static/js/main.fe55e845.chunk.js","sourcesContent":["import cards from \"./json/cards\";\nimport factions from \"./json/factions\";\nimport regions from \"./json/regions\";\n\nconst data = () => {\n  return cards.map((card) => ({\n    ...card,\n    region: regions[card.region],\n    faction: factions[card.faction],\n  }));\n};\n\nexport default data;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport fetchData from \"./fetchFromJson\";\n\nexport const name = \"deck\";\n\nexport const initialState = {\n  pending: false,\n  error: \"\",\n  cards: fetchData(),\n  deck: [],\n  discard: [],\n  playerTurn: 1,\n  1: { name: \"\", turnTokens: 0, hand: [] },\n  2: { name: \"\", turnTokens: 0, hand: [] },\n  3: { name: \"\", turnTokens: 0, hand: [] },\n  4: { name: \"\", turnTokens: 0, hand: [] },\n  incident: 0,\n  escalation: 0,\n};\n\nexport const fetchCards = createAsyncThunk(`${name}/fetchCards`, async () => {\n  const data = fetchData();\n  return data;\n});\n\nconst slice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    advanceTurn: (state, action) => {\n      const advance = state.playerTurn + 1;\n      const value = advance > 4 ? 1 : advance;\n      return { ...state, playerTurn: value };\n    },\n    setName: (state, action) => {\n      const { id, value } = action.payload;\n\n      if (id && value) {\n        return { ...state, [id]: { ...state[id], name: value } };\n      }\n\n      return state;\n    },\n    addTurnToken: (state, action) => {\n      const handId = action.payload;\n      if (handId in state) {\n        const turnTokens = state[handId].turnTokens + 1;\n        return { ...state, [handId]: { ...state[handId], turnTokens } };\n      }\n      return state;\n    },\n    removeTurnToken: (state, action) => {\n      const handId = action.payload;\n      if (handId in state) {\n        const dec = state[handId].turnTokens - 1;\n        const turnTokens = dec <= 0 ? 0 : dec;\n        return { ...state, [handId]: { ...state[handId], turnTokens } };\n      }\n      return state;\n    },\n    draw: (state, action) => {\n      const handId = action.payload.hand;\n      const cardId = action.payload.card;\n      const hand = [...state[handId].hand];\n      const card = state.cards.find((item) => item.id === cardId);\n      const deck = state.deck.filter((item) => item.id !== cardId);\n      hand.push(card);\n\n      return { ...state, deck, [handId]: { ...state[handId], hand } };\n    },\n    discard: (state, action) => {\n      const handId = action.payload.hand;\n      const cardId = action.payload.card;\n      const discard = [...state.discard];\n      const card = state.cards.find((item) => item.id === cardId);\n      discard.push(card);\n      const hand = state[handId].hand.filter((item) => item.id !== cardId);\n\n      return { ...state, discard, [handId]: { ...state[handId], hand } };\n    },\n    xfer: (state, action) => {\n      const from = action.payload.from;\n      const to = action.payload.to;\n      const cardId = action.payload.card;\n      const fromHand = [...state[from].hand];\n      const toHand = [...state[to].hand];\n      const card = state.cards.find((item) => item.id === cardId);\n      toHand.hand.push(card);\n      const newFromHand = fromHand.hand.filter((item) => item.id !== cardId);\n\n      return {\n        ...state,\n        [from]: { ...state[from], hand: newFromHand },\n        [to]: { ...state[to], hand: toHand },\n      };\n    },\n    redraw: (state, action) => {\n      const handId = action.payload.hand;\n      const cardId = action.payload.card;\n      const hand = [...state[handId].hand];\n      const card = state.cards.find((item) => item.id === cardId);\n      const discard = state.discard.filter((item) => item.id !== cardId);\n      hand.push(card);\n\n      return { ...state, discard, [handId]: hand };\n    },\n    increase: (state, action) => {\n      if (action.payload in state) {\n        const value = state[action.payload] + 1;\n        return { ...state, [action.payload]: value };\n      }\n      return state;\n    },\n    decrease: (state, action) => {\n      if (action.payload in state) {\n        const dec = state[action.payload] - 1;\n        const value = dec <= 0 ? 0 : dec;\n\n        return { ...state, [action.payload]: value };\n      }\n      return state;\n    },\n    reset: (state) => ({\n      ...initialState,\n      cards: state.cards,\n      deck: state.cards,\n    }),\n  },\n  extraReducers: {\n    [fetchCards.pending]: (state, action) => {\n      return { ...state, pending: true };\n    },\n    [fetchCards.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        cards: action.payload,\n        deck: action.payload,\n        pending: false,\n      };\n    },\n    [fetchCards.rejected]: (state, action) => {\n      return { ...state, error: action.error.message, pending: false };\n    },\n  },\n});\nexport const {\n  advanceTurn,\n  addTurnToken,\n  removeTurnToken,\n  setName,\n  draw,\n  discard,\n  increase,\n  decrease,\n  xfer,\n  redraw,\n  reset,\n} = slice.actions;\nexport default slice.reducer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst EventCard = ({ name, description, condition }) => {\n  return (\n    <Paper\n      elevation={5}\n      style={{\n        display: \"inline-block\",\n        position: \"relative\",\n        padding: \"0.5rem\",\n        width: \"12rem\",\n        height: \"18rem\",\n        lineHeight: 1,\n        background: \"beige\",\n      }}\n    >\n      <div\n        style={{\n          lineHeight: 1,\n          height: \"100%\",\n          padding: \"1rem\",\n          textAlign: \"center\",\n          background: \"orangered\",\n          boxShadow: \"0px 0px 4px rgba(85,85,85, 0.25)\",\n        }}\n      >\n        <div\n          style={{\n            marginBottom: \"2rem\",\n            fontWeight: 700,\n          }}\n        >\n          {name}\n        </div>\n        <div\n          style={{\n            background: \"antiquewhite\",\n            padding: \"1rem\",\n            fontSize: \"0.75rem\",\n          }}\n        >\n          <div\n            style={{\n              marginBottom: \"0.5rem\",\n              paddingBottom: \"0.5rem\",\n              borderBottom: \"1px solid black\",\n            }}\n          >\n            {description}\n          </div>\n          <div>{condition}</div>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nEventCard.propTypes = {\n  name: PropTypes.string,\n  region: PropTypes.shape({ id: PropTypes.string, name: PropTypes.string }),\n  faction: PropTypes.shape({ id: PropTypes.string, name: PropTypes.string }),\n  number: PropTypes.string,\n};\n\nexport default EventCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Neutral from \"@material-ui/icons/Language\";\nimport Communist from \"@material-ui/icons/Star\";\nimport Allied from \"@material-ui/icons/Toys\";\nimport Event from \"@material-ui/icons/DoubleArrow\";\n\nconst Faction = ({ icon }) => {\n  const container = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyItems: \"center\",\n    justifyContent: \"center\",\n    width: \"2rem\",\n    height: \"2rem\",\n    margin: \"0.25rem 0.5rem 0\",\n    borderRadius: \"50%\",\n    textAlign: \"center\",\n  };\n  if (icon === \"1\") {\n    return (\n      <div style={{ ...container, background: \"navy\" }}>\n        <Allied style={{ color: \"aqua\" }} />\n      </div>\n    );\n  }\n  if (icon === \"2\") {\n    return (\n      <div style={{ ...container, background: \"slategray\" }}>\n        <Neutral style={{ color: \"snow\" }} />\n      </div>\n    );\n  }\n\n  if (icon === \"3\") {\n    return (\n      <div style={{ ...container, background: \"darkred\" }}>\n        <Communist style={{ color: \"yellow\" }} />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        ...container,\n        transform: \"rotate(270deg)\",\n        background: \"orangered\",\n      }}\n    >\n      <Event style={{ color: \"antiquewhite\" }} />\n    </div>\n  );\n};\n\nFaction.propTypes = {\n  icon: PropTypes.string,\n};\n\nexport default Faction;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Region = ({ id, name }) => {\n  const styles = {\n    1: { background: \"dodgerblue\" },\n    2: { background: \"deepskyblue\" },\n    3: { background: \"goldenrod\" },\n    4: { background: \"darkkhaki\" },\n    5: { background: \"peachpuff\" },\n    6: { background: \"lightsalmon\" },\n  };\n  return (\n    <div\n      style={{\n        writingMode: \"vertical-rl\",\n        transform: \"rotate(180deg)\",\n        lineHeight: 1,\n        padding: \"0.5rem\",\n        textTransform: \"uppercase\",\n        fontWeight: 700,\n        ...styles[id],\n      }}\n    >\n      {name}\n    </div>\n  );\n};\n\nRegion.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n};\n\nexport default Region;\n","import React from \"react\";\nimport {\n  Filter1,\n  Filter2,\n  Filter3,\n  Filter4,\n  Filter5,\n  Filter6,\n  Filter7,\n  Filter8,\n  Filter9,\n} from \"@material-ui/icons\";\n\nconst icons = {\n  1: Filter1,\n  2: Filter2,\n  3: Filter3,\n  4: Filter4,\n  5: Filter5,\n  6: Filter6,\n  7: Filter7,\n  8: Filter8,\n  9: Filter9,\n};\nconst Number = ({ value }) => {\n  const Comp = icons[value];\n  return <Comp style={{ lineHeight: 1, fontSize: \"1rem\" }} />;\n};\n\nNumber.propTypes = {};\n\nexport default Number;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Faction from \"components/Faction\";\nimport Region from \"./Region\";\nimport Number from \"./Number\";\n\nconst CityCard = ({ name, region, faction, number }) => {\n  return (\n    <Paper\n      elevation={5}\n      style={{\n        display: \"inline-block\",\n        position: \"relative\",\n        padding: \" 0.75rem 0.5rem 0.25rem\",\n        width: \"12rem\",\n        height: \"18rem\",\n        maxWidth: \"12rem\",\n        maxHeight: \"18rem\",\n        lineHeight: 1,\n        background: \"beige\",\n      }}\n    >\n      <div\n        style={{\n          lineHeight: 1,\n          minHeight: \"100%\",\n          background: \"antiquewhite\",\n          boxShadow: \"0px 0px 4px rgba(85,85,85, 0.25)\",\n        }}\n      >\n        <Grid container spacing={1} style={{ alignItems: \"center\" }}>\n          <Grid item xs={3}>\n            <Faction icon={faction.id} />\n          </Grid>\n          <Grid item xs={9}>\n            <span\n              style={{\n                lineHeight: 0,\n                fontWeight: 700,\n                textTransform: \"uppercase\",\n              }}\n            >\n              {name}\n            </span>\n          </Grid>\n        </Grid>\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"3rem\",\n            left: \"0.5rem\",\n            lineHeight: 1,\n          }}\n        >\n          <Region id={region.id} name={region.name} />\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"0.75rem\",\n            left: \"1rem\",\n            lineHeight: 1,\n          }}\n        >\n          <Number value={number} />\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nCityCard.propTypes = {\n  name: PropTypes.string,\n  region: PropTypes.shape({ id: PropTypes.string, name: PropTypes.string }),\n  faction: PropTypes.shape({ id: PropTypes.string, name: PropTypes.string }),\n  number: PropTypes.string,\n};\n\nexport default CityCard;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport Button from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Xfer from \"@material-ui/icons/MobileScreenShare\";\nimport Discard from \"@material-ui/icons/Delete\";\nimport { xfer, discard } from \"app/redux/modules/Deck\";\n\nconst hands = [\"1\", \"2\", \"3\", \"4\"];\n\nconst CardActions = ({ hand, card }) => {\n  const dispatch = useDispatch();\n\n  const [isXferOpen, setXferOpen] = useState(null);\n  const handleXfer = ({ target: { value = \"\" } = {} }) => {\n    setXferOpen(null);\n    if (value) {\n      dispatch(xfer({ from: hand, to: value, card }));\n    }\n  };\n  const handleDiscard = () => {\n    dispatch(discard({ hand, card }));\n  };\n\n  const players = hands.filter((h) => h !== hand);\n  return (\n    <Grid\n      container\n      spacing={1}\n      style={{\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n      }}\n    >\n      <Grid item>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          onClick={(e) => {\n            setXferOpen(e.currentTarget);\n          }}\n        >\n          <Xfer />\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={isXferOpen}\n          keepMounted\n          open={Boolean(isXferOpen)}\n          onClose={handleXfer}\n        >\n          {players.map((player) => (\n            <MenuItem value={player} onClick={handleXfer}>\n              {player}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n      <Grid item>\n        <Button size=\"small\" color=\"secondary\" onClick={handleDiscard}>\n          <Discard />\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nCardActions.propTypes = {\n  hand: PropTypes.string,\n  card: PropTypes.string,\n};\n\nexport default CardActions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport EventCard from \"./EventCard\";\nimport CityCard from \"./CityCard\";\nimport CardActions from \"./CardActions\";\nimport \"./PlayerCard.scss\";\n\nconst Card = ({ hand, data }) => {\n  return (\n    <div className=\"PlayerCard\">\n      {!data.number ? <EventCard {...data} /> : <CityCard {...data} />}\n\n      <div className=\"PlayerCard__actions\">\n        <CardActions hand={hand} card={data.id} />\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  hand: PropTypes.string,\n  data: PropTypes.object,\n};\n\nexport default Card;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Faction from \"components/Faction\";\n\nconst CardSelector = ({ id, options, label, onChange }) => {\n  const handleChange = (event) => {\n    const { target: { children } = {} } = event;\n    const input = children ? children[0] : null;\n    const value = input ? input.value : \"\";\n    if (value) {\n      onChange(value);\n    }\n  };\n\n  return (\n    <Autocomplete\n      id={id}\n      clearOnBlur={true}\n      size=\"small\"\n      style={{ width: \"14rem\" }}\n      onChange={handleChange}\n      options={options}\n      autoHighlight\n      getOptionLabel={(option) => option.name}\n      value={null}\n      renderOption={(option) => {\n        const factionId = option.faction ? option.faction.id : null;\n        return (\n          <>\n            <input type=\"hidden\" name={option.id} value={option.id} />\n            <Faction icon={factionId} />\n            {option.name}\n          </>\n        );\n      }}\n      renderInput={(params) => {\n        return <TextField {...params} label={label} variant=\"outlined\" />;\n      }}\n    />\n  );\n};\n\nCardSelector.propTypes = {\n  id: PropTypes.string.isRequired,\n  options: PropTypes.array,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nCardSelector.defaultProps = {\n  label: \"Card Selector\",\n  options: [],\n  onChange: () => null,\n};\nexport default CardSelector;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { redraw } from \"app/redux/modules/Deck\";\nimport CardSelector from \"components/CardSelector\";\n\nconst DiscardDeck = ({ id, hand }) => {\n  const dispatch = useDispatch();\n  const options = useSelector((state) => state.deck.discard);\n\n  const handleChange = (value = \"\") => {\n    if (value) {\n      dispatch(redraw({ hand, card: value.toString() }));\n    }\n  };\n  return (\n    <CardSelector\n      id={id}\n      options={options ? options : []}\n      label={\"Discard Deck\"}\n      onChange={handleChange}\n    />\n  );\n};\n\nDiscardDeck.propTypes = {\n  id: PropTypes.string,\n  hand: PropTypes.string,\n};\n\nexport default DiscardDeck;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { draw } from \"app/redux/modules/Deck\";\nimport CardSelector from \"components/CardSelector\";\n\nconst PlayerDeck = ({ id, hand }) => {\n  const dispatch = useDispatch();\n  const options = useSelector((state) => state.deck.deck);\n\n  const handleChange = (value = \"\") => {\n    console.log(value);\n    if (value) {\n      dispatch(draw({ hand, card: value.toString() }));\n    }\n  };\n  return (\n    <CardSelector\n      id={id}\n      options={options ? options : []}\n      label={\"Player Deck\"}\n      onChange={handleChange}\n    />\n  );\n};\n\nPlayerDeck.propTypes = {\n  id: PropTypes.string,\n  hand: PropTypes.string,\n};\n\nexport default PlayerDeck;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { setName } from \"app/redux/modules/Deck\";\n\nconst PlayerName = ({ id }) => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.deck);\n  const name = state[id].name;\n\n  const handleChange = ({ target: { value = \"\" } = {} }) => {\n    dispatch(setName({ id, value }));\n  };\n  return (\n    <TextField\n      className=\"PlayerName\"\n      size=\"small\"\n      label=\"Name\"\n      value={name}\n      variant=\"outlined\"\n      onChange={handleChange}\n    />\n  );\n};\n\nPlayerName.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default PlayerName;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Increase from \"@material-ui/icons/AddCircle\";\nimport Decrease from \"@material-ui/icons/RemoveCircle\";\nimport cx from \"classnames\";\nimport \"./Counter.scss\";\n\nconst Counter = ({\n  title,\n  value,\n  variant,\n  onDecrease,\n  decreaseDisabled,\n  onIncrease,\n  increaseDisabled,\n}) => {\n  return (\n    <Paper\n      className={cx({ Counter: true, [variant]: variant })}\n      variant={variant}\n    >\n      {title && <span className=\"Counter__title\">{title}</span>}\n      <Button\n        className=\"Counter__decrease\"\n        onClick={onDecrease}\n        size=\"small\"\n        disabled={decreaseDisabled}\n      >\n        <Decrease />\n      </Button>\n      <span className=\"Counter__value\">{value}</span>\n      <Button\n        className=\"Counter__increase\"\n        onClick={onIncrease}\n        size=\"small\"\n        disabled={increaseDisabled}\n      >\n        <Increase />\n      </Button>\n    </Paper>\n  );\n};\n\nCounter.defaultProps = {\n  value: 0,\n  name: \"\",\n  onDecrease: () => null,\n  onIncrease: () => null,\n};\n\nCounter.propTypes = {\n  title: PropTypes.node,\n  value: PropTypes.string,\n  onDecrease: PropTypes.func,\n  onIncrease: PropTypes.func,\n  decreaseDisabled: PropTypes.bool,\n  increaseDisabled: PropTypes.bool,\n};\n\nexport default Counter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Icon from \"@material-ui/core/SvgIcon\";\nimport Clock from \"@material-ui/icons/AccessTime\";\nimport Counter from \"components/Counter\";\nimport { addTurnToken, removeTurnToken } from \"app/redux/modules/Deck\";\nimport \"./TurnTokenCounter.scss\";\n\nconst TurnTokenCounter = ({ id }) => {\n  const dispatch = useDispatch();\n  const value = useSelector((state) => state.deck[id].turnTokens);\n\n  const handleDecrease = () => {\n    dispatch(removeTurnToken(id));\n  };\n  const handleIncrease = () => {\n    dispatch(addTurnToken(id));\n  };\n  return (\n    <Counter\n      variant=\"outlined\"\n      title={\n        <span className=\"TurnToken\">\n          <Icon>\n            <Clock />\n          </Icon>\n        </span>\n      }\n      onDecrease={handleDecrease}\n      onIncrease={handleIncrease}\n      decreaseDisabled={value <= 0}\n      value={value ? value.toString() : \"0\"}\n    />\n  );\n};\n\nTurnTokenCounter.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default TurnTokenCounter;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport cx from \"classnames\";\nimport PlayerCard from \"features/PlayerCard\";\nimport DiscardDeck from \"./DiscardDeck\";\nimport PlayerDeck from \"./PlayerDeck\";\nimport PlayerName from \"./PlayerName\";\nimport TurnTokenCounter from \"./TurnTokenCounter\";\nimport { name as deckName } from \"app/redux/modules/Deck\";\nimport \"./Hand.scss\";\n\nconst Hand = ({ id }) => {\n  const [profileOpen, setProfileOpen] = useState(false);\n  const state = useSelector((state) => state[deckName]);\n  const hand = state[id].hand;\n  const playerTurn = state.playerTurn.toString();\n  return (\n    <Paper\n      className={cx({ Hand: true, isTurn: playerTurn === id })}\n      elevation={playerTurn === id ? 4 : 2}\n    >\n      <div className=\"Hand__content\">\n        <div className=\"Hand__header\">\n          <Grid\n            id={`Hand-Controls-${id}`}\n            className=\"Hand__controls\"\n            container\n            spacing={2}\n          >\n            <Grid item>\n              <PlayerName id={id} />\n            </Grid>\n            <Grid item>\n              <TurnTokenCounter id={id} />\n            </Grid>\n            <Grid item>\n              <PlayerDeck id={`hand-player-${id}`} hand={id} />\n            </Grid>\n            <Grid item>\n              <DiscardDeck id={`hand-discard-${id}`} hand={id} />\n            </Grid>\n            <Grid item>\n              {hand.length > 7 && (\n                <span className=\"Hand__warning\">\n                  Player has too many cards.\n                </span>\n              )}\n            </Grid>\n            <Grid item>\n              <button\n                style={{ width: \"1.5rem\", textAlign: \"center\" }}\n                onClick={() => setProfileOpen((state) => !state)}\n              >\n                {profileOpen ? \" - \" : \"+\"}\n              </button>\n            </Grid>\n          </Grid>\n        </div>\n        <div\n          className={cx({\n            Hand__cardContainer: true,\n            hasCards: hand.length,\n            isCollapsed: profileOpen,\n          })}\n        >\n          <Grid container spacing={4}>\n            {hand.map((card, i) => (\n              <Grid item key={`Hand-${id}-card-${i}`} className=\"Hand__card\">\n                <PlayerCard key={card.id} hand={id} data={card} />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nHand.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default Hand;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { reset } from \"app/redux/modules/Deck\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Reset = (props) => {\n  const dispatch = useDispatch();\n  const [isResetting, setIsResetting] = useState(\"\");\n\n  const handleClick = () => {\n    if (!isResetting) {\n      setIsResetting(\"Really?\");\n    } else {\n      dispatch(reset());\n      setIsResetting(\"\");\n    }\n  };\n  return (\n    <Button variant=\"contained\" color=\"secondary\" onClick={handleClick}>\n      {isResetting ? isResetting : \"Reset\"}\n    </Button>\n  );\n};\n\nexport default Reset;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Incident from \"@material-ui/icons/Error\";\nimport Counter from \"components/Counter\";\nimport { increase, decrease } from \"app/redux/modules/Deck\";\nimport \"./Incident.scss\";\n\nconst IncidentCounter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector((state) => state.deck.incident);\n\n  const handleDecrease = () => {\n    dispatch(decrease(\"incident\"));\n  };\n  const handleIncrease = () => {\n    dispatch(increase(\"incident\"));\n  };\n  return (\n    <Counter\n      title={\n        <span className=\"Incident\">\n          <Incident style={{ color: \"white\" }} />\n        </span>\n      }\n      onDecrease={handleDecrease}\n      onIncrease={handleIncrease}\n      decreaseDisabled={value <= 0}\n      value={value.toString()}\n    />\n  );\n};\n\nexport default IncidentCounter;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Escalation from \"@material-ui/icons/SignalCellularAlt\";\nimport Counter from \"components/Counter\";\nimport { increase, decrease } from \"app/redux/modules/Deck\";\n\nconst EscalationCounter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector((state) => state.deck.escalation);\n\n  const handleDecrease = () => {\n    dispatch(decrease(\"escalation\"));\n  };\n  const handleIncrease = () => {\n    dispatch(increase(\"escalation\"));\n  };\n  return (\n    <Counter\n      title={<Escalation style={{ color: \"firebrick\" }} />}\n      onDecrease={handleDecrease}\n      onIncrease={handleIncrease}\n      decreaseDisabled={value <= 0}\n      value={value.toString()}\n    />\n  );\n};\n\nexport default EscalationCounter;\n","import React from \"react\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nexport default function Meeple(props) {\n  return (\n    <SvgIcon {...props} viewBox=\"0 0 80 80\">\n      <path\n        d=\"M57.1,61.6l-10.6-33c3.6-2.9,5.9-7.3,5.9-12.3c0-8.7-7.1-15.8-15.9-15.8c-8.7,0-15.9,7.1-15.9,15.8c0,5,2.3,9.4,5.9,12.3\n\tl-10.6,33c0,0.2-0.1,0.3-0.1,0.5c0,3,2.3,5.7,6.5,7.7c3.8,1.7,8.9,2.7,14.2,2.7s10.4-1,14.2-2.7c4.2-1.9,6.5-4.7,6.5-7.7\n\tC57.1,61.9,57.1,61.7,57.1,61.6z\"\n      />\n    </SvgIcon>\n  );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Meeple from \"components/Meeple\";\nimport { advanceTurn } from \"app/redux/modules/Deck\";\n\nconst PlayerTurn = () => {\n  const dispatch = useDispatch();\n  const playerTurn = useSelector((state) => state.deck.playerTurn);\n  const handleClick = () => {\n    dispatch(advanceTurn());\n  };\n  return (\n    <Button\n      variant=\"contained\"\n      onClick={handleClick}\n      style={{ minWidth: \"unset\" }}\n    >\n      <Meeple />\n      {`${playerTurn.toString()}`}\n    </Button>\n  );\n};\n\nexport default PlayerTurn;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { fetchCards } from \"./app/redux/modules/Deck\";\nimport Hand from \"./features/Hand\";\nimport Reset from \"./features/Reset\";\nimport IncidentCounter from \"./features/IncidentCounter\";\nimport EscalationCounter from \"./features/EscalationCounter\";\nimport PlayerTurn from \"./features/PlayerTurn\";\n\nconst App = ({ hands }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCards());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\" style={{ marginBottom: \"1rem\" }}>\n        <Toolbar>\n          <Typography variant=\"h6\">Pandemic Player Cards</Typography>\n          <div style={{ marginLeft: \"2rem\" }}>\n            <PlayerTurn />\n          </div>\n          <div style={{ marginLeft: \"2rem\" }}>\n            <IncidentCounter />\n          </div>\n          <div style={{ marginLeft: \"2rem\" }}>\n            <EscalationCounter />\n          </div>\n          <div style={{ flexGrow: 1, textAlign: \"right\" }}>\n            <Reset />\n          </div>\n        </Toolbar>\n      </AppBar>\n      {hands.map((hand, i) => (\n        <Hand key={`hand-${i}`} id={hand} />\n      ))}\n    </div>\n  );\n};\n\nApp.defaultProps = {\n  hands: [\"1\", \"2\", \"3\", \"4\"],\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { Cards } from \"./modules/Cards\";\nimport { Deck } from \"./modules/Deck\";\nimport { Hand } from \"./modules/Hand\";\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_API_ROOT,\n  cache: new InMemoryCache({\n    typePolicies: {\n      Cards,\n      Deck,\n      Hand,\n    },\n  }),\n});\n\nexport default client;\n","export const Cards = {\n  keyFields: [\"id\"],\n};\n","export const Deck = {\n  keyFields: [\"id\"],\n};\n","export const Hand = {\n  keyFields: [\"id\"],\n};\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { loadState, saveState } from \"./sessionStorage\";\nimport deck from \"./modules/Deck\";\n\nconst storeKey = \"PANDEMIC_ZERO_STORE\";\n\nconst preloadedState = loadState(storeKey);\n\nconst store = configureStore({\n  preloadedState,\n  reducer: {\n    deck,\n  },\n});\n\nstore.subscribe(() => {\n  saveState(storeKey, store.getState());\n});\n\nexport default store;\n","/* istanbul ignore file */\n\nexport const loadState = (key) => {\n  try {\n    const serializedState = sessionStorage.getItem(key);\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (error) {\n    return undefined;\n  }\n};\n\nexport const saveState = (key, state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    sessionStorage.setItem(key, serializedState);\n  } catch (error) {\n    // Ignore write errors.\n  }\n};\n","import { Provider as Redux } from \"react-redux\";\nimport { ApolloProvider as Apollo } from \"@apollo/client\";\n\nimport gqlClient from \"app/gql\";\nimport reduxClient from \"app/redux\";\n\nconst ReduxProvider = ({ children }) => (\n  <Redux store={reduxClient}>{children}</Redux>\n);\nconst ApolloProvider = ({ children }) => (\n  <Apollo client={gqlClient}>{children}</Apollo>\n);\n\nconst GQL_FLAG = process.env.REACT_APP_GQL_FLAG;\nlet Provider = ReduxProvider;\nif (GQL_FLAG) {\n  Provider = ApolloProvider;\n}\n\nexport default Provider;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./Root\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport AppProvider from \"./app\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <AppProvider>\n      <Root />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}